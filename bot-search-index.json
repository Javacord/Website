[{"title":"Imprint","headers":[],"content":"<h1 id=\"imprint\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#imprint\" aria-hidden=\"true\">#</a> Imprint</h1>\n<iframe src=\"/im.html\" style=\"height: calc(100vh - 250px); width: 100%\"></iframe>","path":"/imprint.html","keywords":[]},{"title":"Privacy Policy","headers":[],"content":"<h1 id=\"privacy-policy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#privacy-policy\" aria-hidden=\"true\">#</a> Privacy Policy</h1>\n<iframe src=\"/pp.html\" style=\"height: calc(100vh - 250px); width: 100%\"></iframe>","path":"/privacy-policy.html","keywords":[]},{"title":"Bot Lifecycle","headers":[{"level":2,"title":"üí° The four states","slug":"the-four-states","children":[{"level":3,"title":"Connected","slug":"connected","children":[]},{"level":3,"title":"Disconnected","slug":"disconnected","children":[]},{"level":3,"title":"Resuming","slug":"resuming","children":[]},{"level":3,"title":"Reconnecting","slug":"reconnecting","children":[]}]},{"level":2,"title":"üíä How to handle disconnects","slug":"how-to-handle-disconnects","children":[]}],"content":"<h1 id=\"bot-lifecycle\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#bot-lifecycle\" aria-hidden=\"true\">#</a> Bot Lifecycle</h1>\n<p>It's important to know the life-cycle of a discord bot to properly handle disconnects.\nThe following state diagram shows the 4 states a bot can have:</p>\n<p><img src=\"@source/wiki/advanced-topics/lifecycle-state-diagram.svg\" alt=\"\"></p>\n<h2 id=\"the-four-states\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#the-four-states\" aria-hidden=\"true\">#</a> üí° The four states</h2>\n<h3 id=\"connected\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#connected\" aria-hidden=\"true\">#</a> Connected</h3>\n<p>The bot is connected to the websocket and receives all events.</p>\n<h3 id=\"disconnected\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#disconnected\" aria-hidden=\"true\">#</a> Disconnected</h3>\n<p>The bot is not connected to the websocket and receives no events. It's not uncommon for a bot to occasionally lose connection.\nThis can have various reasons, for example:</p>\n<ul>\n<li>Your bot lost its internet connection</li>\n<li>Discord restarted the gateway server you are currently connected to</li>\n<li>A plane crashed into Discord's data center</li>\n</ul>\n<p>The bot will periodically try to resume/reconnect to the websocket. It will start with a small frequency and increase it\nwith every failed reconnect attempt. You can modify the reconnect delay with the <code v-pre>DiscordApi#setReconnectDelay(...)</code> method.\nThe following example code would increase the delay linearly.\nThe 1st attempt would be delayed for <code v-pre>2</code> seconds, the 2nd attempt for <code v-pre>4</code> seconds, the 3rd attempts for <code v-pre>6</code> seconds, ...</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">setReconnectDelay</span><span class=\"token punctuation\">(</span>attempt <span class=\"token operator\">-></span> attempt <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><blockquote>\n<p><strong>Important:</strong> Bots can only reconnect 1000 times in a 24-hour period (every ~90 seconds). This limit is global and across all shards.\nUpon hitting this limit, all active sessions for the bot will be terminated, the bot's token will be reset, and\nyou will receive an email notification. This is the reason Javacord increases the reconnect delay with every attempt.</p>\n</blockquote>\n<p>By default, the $default_delay$ formula below is used to calculate the reconnect delay</p>\n<p>$$\ndefault_delay(a) = \\lfloor a^{1.5} - \\frac{a^{1.5}}{\\frac{1}{(0.1 \\cdot a)} + 1} \\rceil\n$$</p>\n<p>with $a$ being the attempt.</p>\n<p>The formula will generate the following reconnect delay:</p>\n<table>\n<thead>\n<tr>\n<th>Attempt</th>\n<th>Delay</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>3</td>\n<td>4</td>\n</tr>\n<tr>\n<td>4</td>\n<td>6</td>\n</tr>\n<tr>\n<td>5</td>\n<td>7</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>10</td>\n<td>16</td>\n</tr>\n<tr>\n<td>15</td>\n<td>23</td>\n</tr>\n<tr>\n<td>20</td>\n<td>30</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n</tr>\n<tr>\n<td>50</td>\n<td>59</td>\n</tr>\n<tr>\n<td>100</td>\n<td>91</td>\n</tr>\n<tr>\n<td>150</td>\n<td>115</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"resuming\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#resuming\" aria-hidden=\"true\">#</a> Resuming</h3>\n<p>Resuming is only possible for a short time after being disconnected. If the bot can successfully resume the connection,\nyou will not miss any events. Your bot will receive all events you missed while being disconnected. The cache gets updated\naccordingly.</p>\n<h3 id=\"reconnecting\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#reconnecting\" aria-hidden=\"true\">#</a> Reconnecting</h3>\n<p>If your bot reconnects (not resumes!), the whole cache gets wiped, and you will not receive any missed events.</p>\n<p><strong>What does this mean?</strong></p>\n<ul>\n<li>References to entities (e.g. a <code v-pre>Server</code>, <code v-pre>User</code>, <code v-pre>Channel</code>, ...) will be outdated. This is why you should never store\nentities, but the id instead. See <RouterLink to=\"/wiki/advanced-topics/entity-cache.html#how-long-are-cached-entities-valid\">Entity Cache</RouterLink>.</li>\n<li>You will miss events. There's no way to receive the missed events.</li>\n<li>Listeners attached to entities will <strong>not</strong> be affected, because they are bound to the entity's id, not the object itself.</li>\n</ul>\n<h2 id=\"how-to-handle-disconnects\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-handle-disconnects\" aria-hidden=\"true\">#</a> üíä How to handle disconnects</h2>\n<p>For most bots, there's nothing you have to do. All registered listeners are reconnect-resistant, which means if your bot\nis only reacting to events, it will work fine after a restart. For example, the following code will not be affected by a\nreconnect (besides maybe some missed <code v-pre>!ping</code> messages):</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>In case you want to handle reconnects (e.g. fetch the message history to detect missed messages), there are\nspecial connection-related listeners which can be used to track the state of the bot:</p>\n<ul>\n<li><code v-pre>LostConnectionListener</code></li>\n<li><code v-pre>ReconnectListener</code></li>\n<li><code v-pre>ResumeListener</code></li>\n</ul>\n","path":"/wiki/advanced-topics/bot-lifecycle.html","keywords":["resume","reconnect","lifecycle","unavailable"]},{"title":"Entity Cache","headers":[{"level":2,"title":"üîÆ What is in the cache?","slug":"what-is-in-the-cache","children":[]},{"level":2,"title":"‚ùì When are cached entities updated?","slug":"when-are-cached-entities-updated","children":[]},{"level":2,"title":"‚åö How long are cached entities valid?","slug":"how-long-are-cached-entities-valid","children":[]}],"content":"<h1 id=\"entity-cache\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#entity-cache\" aria-hidden=\"true\">#</a> Entity Cache</h1>\n<p>Javacord keeps an internal cache for entities (e.g. Servers, Channels, Users, ...). It is important to know how the cache behaves to properly use it.</p>\n<h2 id=\"what-is-in-the-cache\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-is-in-the-cache\" aria-hidden=\"true\">#</a> üîÆ What is in the cache?</h2>\n<p>Nearly every entity known by the bot is guaranteed to be in the cache. There are a few exceptions though:</p>\n<h4 id=\"users\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#users\" aria-hidden=\"true\">#</a> Users</h4>\n<p>Users are only cached when you have the <code v-pre>GUILD_MEMBERS</code> intent enabled.\nSee <RouterLink to=\"/wiki/basic-tutorials/gateway-intents/\">Gateway Intents</RouterLink> for more information.</p>\n<h4 id=\"messages\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#messages\" aria-hidden=\"true\">#</a> Messages</h4>\n<p>Not every single message is in the cache, which means you can encounter messages which exist but are not in the cache. This can happen for most message events, e.g. the <a href=\"https://ci.javacord.org/javadoc/org/javacord/api/event/message/reaction/ReactionAddEvent.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code v-pre>ReactionAddEvent</code><ExternalLinkIcon/></a>. You can, however, interact with these messages without having them in the cache. Every message event has methods like <code v-pre>event.deleteMessage()</code>, <code v-pre>event.editMessage(&quot;New Content&quot;)</code>. If you need the message (e.g. to get its content), you can request it using <code v-pre>event.requestMessage()</code>.</p>\n<p>Additionally, you can use the static methods in the <a href=\"https://ci.javacord.org/javadoc/org/javacord/api/entity/message/Message.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code v-pre>Message</code><ExternalLinkIcon/></a> class which only require the channel and message id, e.g. <code v-pre>Message.edit(api, channelId, messageId, &quot;New content&quot;);</code>. This is very useful if you want to store them in a database.</p>\n<h4 id=\"webhooks-and-invites\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#webhooks-and-invites\" aria-hidden=\"true\">#</a> Webhooks and Invites</h4>\n<p>Webhooks and Invites are not kept in the cache at all and won't receive any updates.</p>\n<h4 id=\"embeds\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#embeds\" aria-hidden=\"true\">#</a> Embeds</h4>\n<p>Embeds from <code v-pre>message.getEmbed()</code> won't receive updates. If a message's embed gets edited, <code v-pre>getEmbed()</code> will return a completely new embed object.</p>\n<h2 id=\"when-are-cached-entities-updated\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#when-are-cached-entities-updated\" aria-hidden=\"true\">#</a> ‚ùì When are cached entities updated?</h2>\n<p>Javacord's cache exclusively uses websocket events to keep the cache up to date. This means that the content of your objects might be outdated, even though you modified it yourself:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Messages</span> message <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Prints the old content, e.g. \"old content\"</span>\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Edits the message and waits for success</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Still prints \"old content\"</span>\n<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Most likely prints \"new content\" now</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"how-long-are-cached-entities-valid\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-long-are-cached-entities-valid\" aria-hidden=\"true\">#</a> ‚åö How long are cached entities valid?</h2>\n<p>Even though entities are usually kept in the cache for a very long time, you should not keep references to these objects for a longer period of time, but store the id / use event methods:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Bad</span>\n<span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">addReactionAddListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getEmoji</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsEmoji</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëé\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Prevents \"message\" from being garbage collected</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good</span>\n<span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">addReactionAddListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getEmoji</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsEmoji</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëé\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">deleteMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Does not use the message object</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Bad</span>\n<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> usersWithBadMood <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napi<span class=\"token punctuation\">.</span><span class=\"token function\">addReactionAddListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getEmoji</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsEmoji</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üò¶\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    usersWithBadMood<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Good</span>\n<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> usersWithBadMood <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napi<span class=\"token punctuation\">.</span><span class=\"token function\">addReactionAddListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getEmoji</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsEmoji</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üò¶\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    usersWithBadMood<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Some examples of when cached entities are invalidated:</p>\n<ul>\n<li>The bot lost its connection to Discord and had to reconnect (not resume)</li>\n<li>You weren't able to receive updates for an entity, e.g. for <code v-pre>Channel</code>, because you left and rejoined a server</li>\n</ul>\n","path":"/wiki/advanced-topics/entity-cache.html","keywords":["entity","cache","caching"]},{"title":"Performance Tweaks","headers":[{"level":2,"title":"‚úÇÔ∏è Disabling Startup Wait","slug":"disabling-startup-wait","children":[]},{"level":2,"title":"‚öôÔ∏è Fine Tuning the Message Cache","slug":"fine-tuning-the-message-cache","children":[]},{"level":2,"title":"üíé Using the Updater classes","slug":"using-the-updater-classes","children":[{"level":3,"title":"Example","slug":"example","children":[]}]}],"content":"<h1 id=\"performance-tweaks\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#performance-tweaks\" aria-hidden=\"true\">#</a> Performance Tweaks</h1>\n<h2 id=\"disabling-startup-wait\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#disabling-startup-wait\" aria-hidden=\"true\">#</a> ‚úÇÔ∏è Disabling Startup Wait</h2>\n<p>By default, Javacord waits for all servers and members to be loaded on startup. You can disable this behavior in the <code v-pre>DiscordApiBuilder</code> before logging in:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setWaitForServersOnStartup</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>api <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Do something</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Depending on the size of your bot, this can significantly speed up the login process. This comes with one downside however: The <code v-pre>api.getServers()</code> collection is empty directly after logging in. You will receive <code v-pre>ServerBecomesAvailableEvent</code>s for every server which finished loading.</p>\n<h2 id=\"fine-tuning-the-message-cache\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#fine-tuning-the-message-cache\" aria-hidden=\"true\">#</a> ‚öôÔ∏è Fine Tuning the Message Cache</h2>\n<p>In order to reduce memory usage, you can completely disable the message cache or reduce the number of cached messages. By default, Javacord caches up to 50 messages per channel and removes messages from the cache which are older than 12 hours. You can lower this limit by using <code v-pre>DiscordApi#setMessageCacheSize(Capacity, StorageTimeInSeconds)</code>.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Cache a maximum of 10 messages per channel for and remove messages older than 1 hour</span>\napi<span class=\"token punctuation\">.</span><span class=\"token function\">setMessageCacheSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>You can even set this limit on a per-channel basis:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">TextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCapacity</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setStorageTimeInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"using-the-updater-classes\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-the-updater-classes\" aria-hidden=\"true\">#</a> üíé Using the Updater classes</h2>\n<p>If you update several settings of an entity (server, channel, ...) at once, you should use the updater for this entity instead of the <code v-pre>updateXyz(...)</code> methods.</p>\n<h3 id=\"example\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example\" aria-hidden=\"true\">#</a> Example</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Sends 1 request to Discord</span>\n<span class=\"token class-name\">ServerTextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelUpdater</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example-channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setTopic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is an example channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setNsfwFlag</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>instead of</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Sends 3 requests to Discord</span>\n<span class=\"token class-name\">ServerTextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">updateName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example-channel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">updateTopic</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is an example channel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">updateNsfwFlag</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","path":"/wiki/advanced-topics/performance-tweaks.html","keywords":["performance","tweaks","startup wait","message cache","tuning"]},{"title":"Playing Audio","headers":[{"level":2,"title":"üîå Connect to a voice channel","slug":"connect-to-a-voice-channel","children":[{"level":3,"title":"Example","slug":"example","children":[]}]},{"level":2,"title":"üëÇ Playing music","slug":"playing-music","children":[]}],"content":"<h1 id=\"playing-audio\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#playing-audio\" aria-hidden=\"true\">#</a> Playing Audio</h1>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>Support for audio was added to Javacord very recently.\nIf you encounter any bugs, please <a href=\"https://github.com/Javacord/Javacord/issues/new\" target=\"_blank\" rel=\"noopener noreferrer\">create an issue on GitHub<ExternalLinkIcon/></a>!</p>\n</div>\n<p>Javacord allows your bot to connect to voice channels and play audio (e.g., music).\nThis short tutorial gives you an introduction on how to connect to a voice channel and play your\n<a href=\"https://youtu.be/qRC4Vk6kisY\" target=\"_blank\" rel=\"noopener noreferrer\">favorite music<ExternalLinkIcon/></a>.</p>\n<h2 id=\"connect-to-a-voice-channel\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#connect-to-a-voice-channel\" aria-hidden=\"true\">#</a> üîå Connect to a voice channel</h2>\n<p>Connecting to a voice channel is very straight forward:\nCalling <code v-pre>#connect()</code> on an instance of <code v-pre>ServerVoiceChannel</code> will connect your bot to this voice channel and\nreturn a <RouterLink to=\"/wiki/essential-knowledge/completable-futures/\">future</RouterLink> with an <code v-pre>AudioConnection</code> object.</p>\n<h3 id=\"example\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example\" aria-hidden=\"true\">#</a> Example</h3>\n<p>The following example will connect the bot to the voice channel of the user that typed <code v-pre>!music</code> in the chat:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">ServerVoiceChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>audioConnection <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do stuff</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Failed to connect to voice channel (no permissions?)</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"playing-music\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#playing-music\" aria-hidden=\"true\">#</a> üëÇ Playing music</h2>\n<p>There are plenty of sources for audio (e.g., YouTube, local files, etc.).\nThe current de facto standard library for extracting audio from these sources with Java is the\n<a href=\"https://github.com/lavalink-devs/lavaplayer\" target=\"_blank\" rel=\"noopener noreferrer\">LavaPlayer<ExternalLinkIcon/></a> library.</p>\n<p>To use it with Javacord, you have to add it as a dependency to your project (e.g., with Gradle or Maven) and\ncreate a Javacord audio source like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LavaplayerAudioSource</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AudioSourceBase</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AudioPlayer</span> audioPlayer<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AudioFrame</span> lastFrame<span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Creates a new lavaplayer audio source.\n     *\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">api</span> A discord api instance.\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">audioPlayer</span> An audio player from Lavaplayer.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LavaplayerAudioSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DiscordApi</span> api<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AudioPlayer</span> audioPlayer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>audioPlayer <span class=\"token operator\">=</span> audioPlayer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getNextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastFrame <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">applyTransformers</span><span class=\"token punctuation\">(</span>lastFrame<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasNextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        lastFrame <span class=\"token operator\">=</span> audioPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">provide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> lastFrame <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AudioSource</span> <span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LavaplayerAudioSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> audioPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>With this audio source, you can now start using Lavaplayer, e.g. to play a YouTube video:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Create a player manager</span>\n<span class=\"token class-name\">AudioPlayerManager</span> playerManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultAudioPlayerManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplayerManager<span class=\"token punctuation\">.</span><span class=\"token function\">registerSourceManager</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">YoutubeAudioSourceManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">AudioPlayer</span> player <span class=\"token operator\">=</span> playerManager<span class=\"token punctuation\">.</span><span class=\"token function\">createPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create an audio source and add it to the audio connection's queue</span>\n<span class=\"token class-name\">AudioSource</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LavaplayerAudioSource</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naudioConnection<span class=\"token punctuation\">.</span><span class=\"token function\">setAudioSource</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// You can now use the AudioPlayer like you would normally do with Lavaplayer, e.g.,</span>\nplayerManager<span class=\"token punctuation\">.</span><span class=\"token function\">loadItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.youtube.com/watch?v=NvS351QKFV4\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioLoadResultHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">trackLoaded</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AudioTrack</span> track<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        player<span class=\"token punctuation\">.</span><span class=\"token function\">playTrack</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">playlistLoaded</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AudioPlaylist</span> playlist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AudioTrack</span> track <span class=\"token operator\">:</span> playlist<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            player<span class=\"token punctuation\">.</span><span class=\"token function\">playTrack</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">noMatches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Notify the user that we've got nothing</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadFailed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FriendlyException</span> throwable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Notify the user that everything exploded</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","path":"/wiki/advanced-topics/playing-audio.html","keywords":["audio","music","voice"]},{"title":"Proxies","headers":[{"level":2,"title":"üë®‚Äçüíª Configuring a Proxy ...","slug":"configuring-a-proxy","children":[{"level":3,"title":"... using System Properties","slug":"using-system-properties","children":[]},{"level":3,"title":"... using a System Default Proxy Selector","slug":"using-a-system-default-proxy-selector","children":[]},{"level":3,"title":"... using an Explicitly Set Proxy","slug":"using-an-explicitly-set-proxy","children":[]},{"level":3,"title":"... using an Explicitly Set Proxy Selector","slug":"using-an-explicitly-set-proxy-selector","children":[]},{"level":3,"title":"Precedence of the Configuration Options","slug":"precedence-of-the-configuration-options","children":[]}]},{"level":2,"title":"üîë Configuring Proxy Authentication ...","slug":"configuring-proxy-authentication","children":[{"level":3,"title":"... using a System Default Authenticator","slug":"using-a-system-default-authenticator","children":[]},{"level":3,"title":"... using an Explicitly Set Authenticator","slug":"using-an-explicitly-set-authenticator","children":[]}]},{"level":2,"title":"üí° Proxy Types","slug":"proxy-types","children":[{"level":3,"title":"HTTP","slug":"http","children":[]},{"level":3,"title":"SOCKS 4","slug":"socks-4","children":[]},{"level":3,"title":"SOCKS 4a","slug":"socks-4a","children":[]},{"level":3,"title":"SOCKS 5","slug":"socks-5","children":[]}]}],"content":"<h1 id=\"proxies\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#proxies\" aria-hidden=\"true\">#</a> Proxies</h1>\n<p>There are basically two kinds of proxies: HTTP proxies and SOCKS proxies. Both may or may not support or require authentication depending on version, capabilities, and configuration. Due to the underlying libraries used, currently, Javacord fully supports HTTP proxies and partially supports SOCKS proxies.</p>\n<p>Javacord uses HTTPS connections to communicate with the Discord REST API and a WSS connection to communicate with the Discord WebSocket endpoint. Both these protocols are secure protocols and thus do not honor settings for HTTP connections, only settings for HTTPS connections.</p>\n<h2 id=\"configuring-a-proxy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#configuring-a-proxy\" aria-hidden=\"true\">#</a> üë®‚Äçüíª Configuring a Proxy ...</h2>\n<h3 id=\"using-system-properties\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-system-properties\" aria-hidden=\"true\">#</a> ... using System Properties</h3>\n<p>If you did not explicitly set a proxy in the <code v-pre>DiscordApiBuilder</code> and did not set a system default <code v-pre>ProxySelector</code>, the default proxy selector of the JRE is used. This proxy selector honors, amongst others, the relevant standard system properties <code v-pre>https.proxyHost</code>, <code v-pre>https.proxyPort</code>, <code v-pre>socksProxyHost</code>, <code v-pre>socksProxyPort</code>, and <code v-pre>socksProxyVersion</code>. Use the former two to configure an HTTP proxy, or the latter three to configure a SOCKS proxy, although you will not need <code v-pre>socksProxyVersion</code>, as SOCKS4 is currently not supported.</p>\n<h3 id=\"using-a-system-default-proxy-selector\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-a-system-default-proxy-selector\" aria-hidden=\"true\">#</a> ... using a System Default Proxy Selector</h3>\n<p>You can use <code v-pre>java.net.ProxySelector.setDefault(ProxySelector)</code> to set a system default proxy selector that replaces the default one. In its implementation, you can dynamically determine which proxy to use for each connection.</p>\n<h3 id=\"using-an-explicitly-set-proxy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-an-explicitly-set-proxy\" aria-hidden=\"true\">#</a> ... using an Explicitly Set Proxy</h3>\n<p>Using the method <code v-pre>DiscordApiBuilder.setProxy(Proxy)</code> you can set a proxy instance directly in the <code v-pre>DiscordApiBuilder</code> that is solely used for Javacord connections and does not affect the unrelated code running in the JVM.</p>\n<h3 id=\"using-an-explicitly-set-proxy-selector\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-an-explicitly-set-proxy-selector\" aria-hidden=\"true\">#</a> ... using an Explicitly Set Proxy Selector</h3>\n<p>Using the method <code v-pre>DiscordApiBuilder.setProxySelector(ProxySelector)</code> you can set a proxy selector instance directly in the <code v-pre>DiscordApiBuilder</code> that is solely used for Javacord connections and does not affect the remaining code running in the JVM. In its implementation, you can dynamically determine which proxy to use for each connection.</p>\n<h3 id=\"precedence-of-the-configuration-options\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#precedence-of-the-configuration-options\" aria-hidden=\"true\">#</a> Precedence of the Configuration Options</h3>\n<ul>\n<li>if an explicit proxy is set, it is used</li>\n<li>if an explicit proxy selector is set, it is used</li>\n<li>if both an explicit proxy and an explicit proxy selector are set, this is a configuration error and will cause an exception to be thrown</li>\n<li>if neither explicit option is set, the system default proxy selector is used</li>\n<li>if no system default proxy selector was explicitly set, the JRE default that honors the system properties is used</li>\n</ul>\n<h2 id=\"configuring-proxy-authentication\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#configuring-proxy-authentication\" aria-hidden=\"true\">#</a> üîë Configuring Proxy Authentication ...</h2>\n<h3 id=\"using-a-system-default-authenticator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-a-system-default-authenticator\" aria-hidden=\"true\">#</a> ... using a System Default Authenticator</h3>\n<p>You can use <code v-pre>java.net.Authenticator.setDefault(Authenticator)</code> to set a system default authenticator that is used to provide username and password pairs for connections. This authenticator is only used if the proxy supports the <code v-pre>Basic</code> authentication scheme. If you need to support any other authentication scheme, use an explicitly configured authenticator. The <code v-pre>java.net.Authenticator</code> interface is too inflexible to support this.</p>\n<h3 id=\"using-an-explicitly-set-authenticator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-an-explicitly-set-authenticator\" aria-hidden=\"true\">#</a> ... using an Explicitly Set Authenticator</h3>\n<p>Using the method <code v-pre>DiscordApiBuilder.setProxyAuthenticator(Authenticator)</code>, you can set a custom authenticator that is much more powerful than the <code v-pre>java.net.Authenticator</code>. You get much more information about the connection to be established, and you can return any HTTP header that is necessary for a successful authentication. This should cover all sorts of available authentication mechanisms.</p>\n<h2 id=\"proxy-types\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#proxy-types\" aria-hidden=\"true\">#</a> üí° Proxy Types</h2>\n<h3 id=\"http\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#http\" aria-hidden=\"true\">#</a> HTTP</h3>\n<p>HTTP proxies are fully supported.</p>\n<h3 id=\"socks-4\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#socks-4\" aria-hidden=\"true\">#</a> SOCKS 4</h3>\n<p>SOCKS 4 is currently not supported.</p>\n<p>The WebSocket library we use does not support SOCKS proxies at all, and the HTTP library we use has a bug that prevents SOCKS 4 to be used. Additionally, you would need to use at least Java 9 or a separate socket factory supporting SOCKS 4, as the JRE implementation is not working in Java 8 and got fixed only in Java 9+.</p>\n<h3 id=\"socks-4a\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#socks-4a\" aria-hidden=\"true\">#</a> SOCKS 4a</h3>\n<p>SOCKS 4a is currently only partially supported.</p>\n<p>The WebSocket library we use does not support SOCKS proxies at all, so it could be used for the REST connections only. Additionally, you would need to use a separate socket factory supporting SOCKS 4a, as the JRE implementation is not capable of doing SOCKS 4a, only SOCKS 4 and SOCKS 5 are supported at the time of creation of this wiki article.</p>\n<h3 id=\"socks-5\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#socks-5\" aria-hidden=\"true\">#</a> SOCKS 5</h3>\n<p>SOCKS 5 is currently only partially supported.</p>\n<p>The WebSocket library we use does not support SOCKS proxies at all, so it could be used for the REST connections only.</p>\n","path":"/wiki/advanced-topics/proxies.html","keywords":["proxy","connection","socks","socks4","socks5"]},{"title":"Ratelimits","headers":[{"level":2,"title":"‚ùó The Most Important Ratelimits","slug":"the-most-important-ratelimits","children":[]},{"level":2,"title":"üí™ Dealing with Ratelimits","slug":"dealing-with-ratelimits","children":[{"level":3,"title":"Example","slug":"example","children":[]}]},{"level":2,"title":"‚ùå Can I disable ratelimits?","slug":"can-i-disable-ratelimits","children":[]}],"content":"<h1 id=\"ratelimits\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ratelimits\" aria-hidden=\"true\">#</a> Ratelimits</h1>\n<p>Ratelimits is a Discord restriction which prevents you from performing actions in a very fast rate.\nMost ratelimits are on a per-channel or a per-server basis.</p>\n<h2 id=\"the-most-important-ratelimits\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#the-most-important-ratelimits\" aria-hidden=\"true\">#</a> ‚ùó The Most Important Ratelimits</h2>\n<table>\n<thead>\n<tr>\n<th>Action</th>\n<th>Ratelimit</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Send Messages</td>\n<td>5 / 5s</td>\n<td>per channel</td>\n</tr>\n<tr>\n<td>Delete Messages</td>\n<td>5 / 1s</td>\n<td>per channel</td>\n</tr>\n<tr>\n<td>Add/Remove Reactions</td>\n<td>1 / 0.25s</td>\n<td>per channel</td>\n</tr>\n<tr>\n<td>Edit Server Members</td>\n<td>10 / 10s</td>\n<td>per server</td>\n</tr>\n<tr>\n<td>Edit Member Nickname</td>\n<td>1 / 1s</td>\n<td>per server</td>\n</tr>\n<tr>\n<td>Edit Bot Username</td>\n<td>2 / 1h</td>\n<td>per account</td>\n</tr>\n<tr>\n<td>Update Channels</td>\n<td>2 / 10m</td>\n<td>per account</td>\n</tr>\n<tr>\n<td>All Actions Combined</td>\n<td>50 / 1s</td>\n<td>per account</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"dealing-with-ratelimits\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#dealing-with-ratelimits\" aria-hidden=\"true\">#</a> üí™ Dealing with Ratelimits</h2>\n<p>Usually Javacord takes care about these limitations for you.\nAs a user, there's nothing you have to do, but you should at least know that ratelimits exist.</p>\n<h3 id=\"example\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example\" aria-hidden=\"true\">#</a> Example</h3>\n<p>The following code</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Who even needs loops?</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #6\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #9\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ratelimit Example #12\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>would look like this in the client:</p>\n<blockquote>\n<p><img src=\"https://i.imgur.com/ailPCdH.gif\" alt=\"\"></p>\n</blockquote>\n<p>You can clearly see the delay between every 5 sent messages.</p>\n<h2 id=\"can-i-disable-ratelimits\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#can-i-disable-ratelimits\" aria-hidden=\"true\">#</a> ‚ùå Can I disable ratelimits?</h2>\n<p>No. Ratelimits are a limitation from Discord itself, which you cannot circumvent.</p>\n","path":"/wiki/advanced-topics/ratelimits.html","keywords":["ratelimits"]},{"title":"Sharding","headers":[{"level":2,"title":"üë©‚Äçüè≠ Sharding in Javacord","slug":"sharding-in-javacord","children":[{"level":3,"title":"Logging in with a single shard","slug":"logging-in-with-a-single-shard","children":[]},{"level":3,"title":"Logging in with a fixed amount of shards","slug":"logging-in-with-a-fixed-amount-of-shards","children":[]},{"level":3,"title":"Using the recommended shard amount","slug":"using-the-recommended-shard-amount","children":[]}]},{"level":2,"title":"üí° Behavior of Shards","slug":"behavior-of-shards","children":[{"level":3,"title":"Managed servers","slug":"managed-servers","children":[]},{"level":3,"title":"Private messages","slug":"private-messages","children":[]},{"level":3,"title":"When do I need sharding?","slug":"when-do-i-need-sharding","children":[]}]},{"level":2,"title":"üåÑ Sharding for Very Large Bots","slug":"sharding-for-very-large-bots","children":[]}],"content":"<h1 id=\"sharding\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#sharding\" aria-hidden=\"true\">#</a> Sharding</h1>\n<p>Discord allows (and forces) you to &quot;split&quot; larger bots into several independent parts. This behavior is called &quot;sharding&quot;, and the independent parts are called &quot;shards&quot;. You can think of shards as completely independent bots. Every shard is responsible for a disjoint set of servers.</p>\n<h2 id=\"sharding-in-javacord\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#sharding-in-javacord\" aria-hidden=\"true\">#</a> üë©‚Äçüè≠ Sharding in Javacord</h2>\n<h3 id=\"logging-in-with-a-single-shard\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#logging-in-with-a-single-shard\" aria-hidden=\"true\">#</a> Logging in with a single shard</h3>\n<p>Logging in with a single shard is pretty much the same as logging in without sharding:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"top secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setCurrentShard</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setTotalShards</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shard \"</span> <span class=\"token operator\">+</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentShard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" logged in!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p><strong>Note</strong>: <code v-pre>current shard</code> starts counting at <code v-pre>0</code>! This means in the example above you would have current shard <code v-pre>0</code> and shard <code v-pre>1</code> with a <code v-pre>total amount</code> of <code v-pre>2</code> shards.</p>\n</blockquote>\n<blockquote>\n<p><strong>Important</strong>: There must be a &gt; 5-second delay between each shard-login</p>\n</blockquote>\n<h3 id=\"logging-in-with-a-fixed-amount-of-shards\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#logging-in-with-a-fixed-amount-of-shards\" aria-hidden=\"true\">#</a> Logging in with a fixed amount of shards</h3>\n<p>You can manually set a fixed amount of total shards and log in all of them:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"top secret\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setTotalShards</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">loginAllShards</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>shardFuture <span class=\"token operator\">-></span> shardFuture\n                <span class=\"token punctuation\">.</span><span class=\"token function\">thenAcceptAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token operator\">::</span><span class=\"token function\">onShardLogin</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onShardLogin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DiscordApi</span> api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shard \"</span> <span class=\"token operator\">+</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentShard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" logged in!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// You can treat the shard like a normal bot account, e.g. registering listeners</span>\n        api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// ...</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code v-pre>loginAllShards()</code> returns a collection with completable futures (<code v-pre>Collection&lt;CompletableFuture&lt;DiscordApi&gt;&gt;</code>). This method automatically obeys the &gt; 5-second delay rule.</p>\n<h3 id=\"using-the-recommended-shard-amount\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-the-recommended-shard-amount\" aria-hidden=\"true\">#</a> Using the recommended shard amount</h3>\n<p>You can &quot;ask&quot; Discord to recommend you a total amount of shards. This is done by using the <code v-pre>DiscordApiBuilder#setRecommendedTotalShards()</code> method, which returns a <code v-pre>CompletableFuture&lt;DiscordApiBuilder&gt;</code> after getting the required information.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"top secret\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setRecommendedTotalShards</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">loginAllShards</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>shardFuture <span class=\"token operator\">-></span> shardFuture\n                <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Main</span><span class=\"token operator\">::</span><span class=\"token function\">onShardLogin</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onShardLogin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DiscordApi</span> api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"behavior-of-shards\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#behavior-of-shards\" aria-hidden=\"true\">#</a> üí° Behavior of Shards</h2>\n<h3 id=\"managed-servers\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#managed-servers\" aria-hidden=\"true\">#</a> Managed servers</h3>\n<p>You can calculate for which servers a shard is responsible using the server id:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">boolean</span> isResponsible <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>serverId <span class=\"token operator\">>></span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> totalShards <span class=\"token operator\">==</span> currentShard<span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3 id=\"private-messages\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#private-messages\" aria-hidden=\"true\">#</a> Private messages</h3>\n<p>Private messages are always sent to the first shard (<code v-pre>currentShard == 0</code>).</p>\n<h3 id=\"when-do-i-need-sharding\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#when-do-i-need-sharding\" aria-hidden=\"true\">#</a> When do I need sharding?</h3>\n<p>Sharding is forced for bots which are in more than 2500 servers.</p>\n<h2 id=\"sharding-for-very-large-bots\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#sharding-for-very-large-bots\" aria-hidden=\"true\">#</a> üåÑ Sharding for Very Large Bots</h2>\n<p>Sharding for very large bots (&gt; 150,000 servers) is a bit different from &quot;normal&quot; sharding. Discord will contact you once your bot reaches this state. Additional information can be found in the <a href=\"https://discordapp.com/developers/docs/topics/gateway#sharding-for-large-bots\" target=\"_blank\" rel=\"noopener noreferrer\">official Discord api documentation<ExternalLinkIcon/></a>.</p>\n","path":"/wiki/advanced-topics/sharding.html","keywords":["sharding","large"]},{"title":"Creating Channels, Invites, etc.","headers":[{"level":2,"title":"üìï Create Channels","slug":"create-channels","children":[]},{"level":2,"title":"üìó Create Webhooks","slug":"create-webhooks","children":[]},{"level":2,"title":"üìò Create Invites","slug":"create-invites","children":[]},{"level":2,"title":"üìô Create Servers","slug":"create-servers","children":[]}],"content":"<h1 id=\"creating-channels-invites-etc\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#creating-channels-invites-etc\" aria-hidden=\"true\">#</a> Creating Channels, Invites, etc.</h1>\n<p>Javacord provides <code v-pre>XyzBuilder</code> classes to create new Discord entities like channels, webhooks, servers, and many more.</p>\n<h2 id=\"create-channels\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-channels\" aria-hidden=\"true\">#</a> üìï Create Channels</h2>\n<p>You can get the channel builders for a specific server using the <code v-pre>Server#createXyzChannelBuilder</code> or by directly calling the constructor.\nCreating a <code v-pre>ServerVoiceChannel</code> would look like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Server</span> server <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">ServerVoiceChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerVoiceChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example-channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setUserlimit</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"create-webhooks\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-webhooks\" aria-hidden=\"true\">#</a> üìó Create Webhooks</h2>\n<p>You can get the <code v-pre>WebhookBuilder</code> for a specific text channel:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">ServerTextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Webhook</span> webhook <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebhookBuilder</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Captain Hook\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setAvatar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/Users/Bastian/Pictures/puppy.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"create-invites\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-invites\" aria-hidden=\"true\">#</a> üìò Create Invites</h2>\n<p>You can get the <code v-pre>InviteBuilder</code> for a specific server channel:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">ServerTextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Invite</span> invite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InviteBuilder</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setMaxAgeInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setMaxUses</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"create-servers\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-servers\" aria-hidden=\"true\">#</a> üìô Create Servers</h2>\n<p>You can get the <code v-pre>ServerBuilder</code> from the current api instance:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">long</span> serverId <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerBuilder</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My Awesome Server\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setIcon</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">getYourself</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAvatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setVerificationLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">VerificationLevel</span><span class=\"token punctuation\">.</span>HIGH<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultMessageNotificationLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DefaultMessageNotificationLevel</span><span class=\"token punctuation\">.</span>ONLY_MENTIONS<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Region</span><span class=\"token punctuation\">.</span>EU_CENTRAL<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>By default, bots can only create servers if they are in less than 10 servers. You can contact the Discord support to request a higher limit.</p>\n</div>\n","path":"/wiki/basic-tutorials/creating-entities.html","keywords":["creating entities","create entities","entity creation","create channels","channel creation","create webhooks","webhook creation","create invites","invite creation","create server","server creation"]},{"title":"Embeds","headers":[{"level":2,"title":"üî® Creating an Embed","slug":"creating-an-embed","children":[]},{"level":2,"title":"üì∑ Supported Image Sources","slug":"supported-image-sources","children":[]},{"level":2,"title":"üîí Embed Limits","slug":"embed-limits","children":[]},{"level":2,"title":"‚ùì FAQ","slug":"faq","children":[{"level":3,"title":"What is the second parameter of setAuthor(...)?","slug":"what-is-the-second-parameter-of-setauthor","children":[]},{"level":3,"title":"What's the difference between an inline field and a normal one?","slug":"what-s-the-difference-between-an-inline-field-and-a-normal-one","children":[]},{"level":3,"title":"Can I change the placement of inline fields?","slug":"can-i-change-the-placement-of-inline-fields","children":[]},{"level":3,"title":"How can I format text in an embed?","slug":"how-can-i-format-text-in-an-embed","children":[]}]}],"content":"<h1 id=\"embeds\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#embeds\" aria-hidden=\"true\">#</a> Embeds</h1>\n<p>Embeds are attached to messages and have a special design.\nThe usually look like this:</p>\n<p><img src=\"https://i.imgur.com/QYbXmQU.png\" alt=\"Embed\"></p>\n<h2 id=\"creating-an-embed\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#creating-an-embed\" aria-hidden=\"true\">#</a> üî® Creating an Embed</h2>\n<p>Javacord provides an <code v-pre>EmbedBuilder</code> which can be used to create embeds:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Create the embed</span>\n<span class=\"token class-name\">EmbedBuilder</span> embed <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EmbedBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Title\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setDescription</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Description\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setAuthor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Author Name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://google.com/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://cdn.discordapp.com/embed/avatars/0.png\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A field\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Some text inside the field\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addInlineField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An inline field\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"More text\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addInlineField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Another inline field\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Even more text\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>BLUE<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setFooter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Footer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://cdn.discordapp.com/embed/avatars/1.png\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/Users/Bastian/Pictures/puppy.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setThumbnail</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/Users/Bastian/Pictures/kitten2.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Send the embed</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>embed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"supported-image-sources\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#supported-image-sources\" aria-hidden=\"true\">#</a> üì∑ Supported Image Sources</h2>\n<p>By default, Discord expects embed images to be a link (e.g., the image link used in <code v-pre>setFooter(...)</code>), but you can also use attachments for images.\nIf you provide a non-url image source (e.g. the <code v-pre>puppy.jpg</code> file used in <code v-pre>setImage(...)</code>), Javacord automatically uploads them as an attachment to the message and uses this attachment for the embed.</p>\n<h2 id=\"embed-limits\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#embed-limits\" aria-hidden=\"true\">#</a> üîí Embed Limits</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Limit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Title</td>\n<td>256 characters</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>4096 characters</td>\n</tr>\n<tr>\n<td>Field Amount</td>\n<td>Up to 25 fields</td>\n</tr>\n<tr>\n<td>Field Name</td>\n<td>256 characters</td>\n</tr>\n<tr>\n<td>Field Value</td>\n<td>1024 characters</td>\n</tr>\n<tr>\n<td>Footer Text</td>\n<td>2048 characters</td>\n</tr>\n<tr>\n<td>Author Name</td>\n<td>256 characters</td>\n</tr>\n</tbody>\n</table>\n<p>In addition to the limits above, the sum of all characters in an embed structure must not exceed 6000 characters.</p>\n<h2 id=\"faq\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#faq\" aria-hidden=\"true\">#</a> ‚ùì FAQ</h2>\n<h3 id=\"what-is-the-second-parameter-of-setauthor\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-is-the-second-parameter-of-setauthor\" aria-hidden=\"true\">#</a> What is the second parameter of <code v-pre>setAuthor(...)</code>?</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token punctuation\">.</span><span class=\"token function\">setAuthor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Author Name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://google.com/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://cdn.discordapp.com/embed/avatars/0.png\"</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><ul>\n<li>First parameter: The name of the author</li>\n<li>Second parameter: A link for the author (e.g. their homepage). Can be <code v-pre>null</code>.</li>\n<li>Third parameter: The avatar of the author</li>\n</ul>\n<blockquote>\n<p><img src=\"https://i.imgur.com/SyE0e88.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"what-s-the-difference-between-an-inline-field-and-a-normal-one\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-s-the-difference-between-an-inline-field-and-a-normal-one\" aria-hidden=\"true\">#</a> What's the difference between an inline field and a normal one?</h3>\n<p>Normal fields always start in a new line, whereas several inline fields can be in the same line.</p>\n<h3 id=\"can-i-change-the-placement-of-inline-fields\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#can-i-change-the-placement-of-inline-fields\" aria-hidden=\"true\">#</a> Can I change the placement of inline fields?</h3>\n<p>No, Discord does not allow different embed layouts.</p>\n<h3 id=\"how-can-i-format-text-in-an-embed\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-can-i-format-text-in-an-embed\" aria-hidden=\"true\">#</a> How can I format text in an embed?</h3>\n<p>Discord allows for a subset of markdown to be used. See <a href=\"https://support.discord.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-\" target=\"_blank\" rel=\"noopener noreferrer\">their docs<ExternalLinkIcon/></a> for the specifics.</p>\n","path":"/wiki/basic-tutorials/embeds.html","keywords":["EmbedBuilder","inline field","setTitle","setDescription","setAuthor","addField","addInlineField","setColor","setFooter","setImage","setThumbnail"]},{"title":"Emojis and Reactions","headers":[{"level":2,"title":"üö¥‚Äç‚ôÇÔ∏è Unicode Emojis","slug":"unicode-emojis","children":[{"level":3,"title":"What are Unicode emojis?","slug":"what-are-unicode-emojis","children":[]},{"level":3,"title":"How to use them in messages","slug":"how-to-use-them-in-messages","children":[]},{"level":3,"title":"How to use them for reactions","slug":"how-to-use-them-for-reactions","children":[]}]},{"level":2,"title":"ü§∏‚Äç‚ôÄÔ∏è Custom Emojis","slug":"custom-emojis","children":[{"level":3,"title":"What are custom emojis?","slug":"what-are-custom-emojis","children":[]},{"level":3,"title":"How to use them in messages","slug":"how-to-use-them-in-messages-1","children":[]},{"level":3,"title":"How to use them for reactions","slug":"how-to-use-them-for-reactions-1","children":[]},{"level":3,"title":"How to get the tag","slug":"how-to-get-the-tag","children":[]}]},{"level":2,"title":"üëë Javacord Emoji \"Hierarchy\"","slug":"javacord-emoji-hierarchy","children":[{"level":3,"title":"What is a KnownCustomEmoji?","slug":"what-is-a-knowncustomemoji","children":[]}]},{"level":2,"title":"üëå Recommended libraries","slug":"recommended-libraries","children":[]}],"content":"<h1 id=\"emojis-and-reactions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#emojis-and-reactions\" aria-hidden=\"true\">#</a> Emojis and Reactions</h1>\n<p>There are two different kinds of emojis in Discord: Unicode emojis and custom emojis.</p>\n<h2 id=\"unicode-emojis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#unicode-emojis\" aria-hidden=\"true\">#</a> üö¥‚Äç‚ôÇÔ∏è Unicode Emojis</h2>\n<h3 id=\"what-are-unicode-emojis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-are-unicode-emojis\" aria-hidden=\"true\">#</a> What are Unicode emojis?</h3>\n<p>Unicode emojis are &quot;normal&quot; text emojis which are supported by (nearly) all chat clients, including Discord. You can find a list with all Unicode emojis here: <a href=\"https://unicode.org/emoji/charts/full-emoji-list.html\" target=\"_blank\" rel=\"noopener noreferrer\">Full Emoji List<ExternalLinkIcon/></a>.</p>\n<h3 id=\"how-to-use-them-in-messages\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-use-them-in-messages\" aria-hidden=\"true\">#</a> How to use them in messages</h3>\n<p>You can either directly add them in your code, e.g.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! üòÉ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>or use the normal &quot;tag&quot; like you would in the Client:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! :smiley:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p><img src=\"https://i.imgur.com/VBiTPq5.png\" alt=\"\"></p>\n<h3 id=\"how-to-use-them-for-reactions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-use-them-for-reactions\" aria-hidden=\"true\">#</a> How to use them for reactions</h3>\n<p>Adding unicode reactions is only possible by using the &quot;real&quot; reaction. It doesn't support tags like <code v-pre>:smiley:</code>.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üòÉ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// works</span>\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":smiley:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// doesn't work</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><img src=\"https://i.imgur.com/Wpp8PNz.png\" alt=\"\"></p>\n<h2 id=\"custom-emojis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#custom-emojis\" aria-hidden=\"true\">#</a> ü§∏‚Äç‚ôÄÔ∏è Custom Emojis</h2>\n<h3 id=\"what-are-custom-emojis\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-are-custom-emojis\" aria-hidden=\"true\">#</a> What are custom emojis?</h3>\n<p>Custom emojis are emojis that are created in a server. You can get all custom emojis the bot knows by using <code v-pre>DiscordApi#getCustomEmojis()</code>.</p>\n<p><img src=\"https://i.imgur.com/5tb3Kxu.png\" alt=\"\"></p>\n<h3 id=\"how-to-use-them-in-messages-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-use-them-in-messages-1\" aria-hidden=\"true\">#</a> How to use them in messages</h3>\n<p>To use custom emojis, you have to know its &quot;tag&quot;, which has the format <code v-pre>&lt;:name:id&gt;</code>. You can get it by calling <code v-pre>CustomEmoji#getMentionTag()</code>:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! &lt;:javacord:415465982715494402>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">CustomEmoji</span> emoji <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! \"</span> <span class=\"token operator\">+</span> emoji<span class=\"token punctuation\">.</span><span class=\"token function\">getMentionTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"how-to-use-them-for-reactions-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-use-them-for-reactions-1\" aria-hidden=\"true\">#</a> How to use them for reactions</h3>\n<p>You can either directly use the custom emoji object or use the tag without the <code v-pre>&lt;:</code> <code v-pre>&gt;</code> if you don't have access a custom emoji object (e.g., because it's from a different shard):</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">CustomEmoji</span> emoji <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span>emoji<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"javacord:415465982715494402\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><h3 id=\"how-to-get-the-tag\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-get-the-tag\" aria-hidden=\"true\">#</a> How to get the tag</h3>\n<p>Just add a <code v-pre>\\</code> in front of the emoji and press <code v-pre>Enter</code></p>\n<p><img src=\"https://i.imgur.com/9L1WyFm.gif\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/4WTGo7F.png\" alt=\"\"></p>\n<h2 id=\"javacord-emoji-hierarchy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javacord-emoji-hierarchy\" aria-hidden=\"true\">#</a> üëë Javacord Emoji &quot;Hierarchy&quot;</h2>\n<p>In Javacord, all Emojis are a child of the <code v-pre>Emoji</code> interface:</p>\n<p><img src=\"https://i.imgur.com/YtMKqXe.png\" alt=\"\"></p>\n<h3 id=\"what-is-a-knowncustomemoji\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-is-a-knowncustomemoji\" aria-hidden=\"true\">#</a> What is a KnownCustomEmoji?</h3>\n<p>Known custom emojis are emojis that the bot knows because it's a member of the server with this emoji. A custom emoji can be unknown if someone adds a reaction with an unknown emoji for example. A <code v-pre>KnownCustomEmoji</code> has additional methods like <code v-pre>getServer()</code> or <code v-pre>updateName(String)</code>.</p>\n<h2 id=\"recommended-libraries\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#recommended-libraries\" aria-hidden=\"true\">#</a> üëå Recommended libraries</h2>\n<p>If you are working a lot with Unicode emojis, it's recommended to use a library like <a href=\"https://github.com/felldo/JEmoji\" target=\"_blank\" rel=\"noopener noreferrer\">JEmoji<ExternalLinkIcon/></a>. It enables you to do things like the following:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EmojiManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getByAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":thumbsup:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","path":"/wiki/basic-tutorials/emojis-and-reactions.html","keywords":["create emoji","emoji creation","unicode emoji","custom emojis","delete emojis","emoji deletion","send emoji","use emoji","KnownCustomEmoji"]},{"title":"Gateway Intents","headers":[{"level":2,"title":"üìã List of Intents","slug":"list-of-intents","children":[]},{"level":2,"title":"üí° What Happens When I Disable Some Intents?","slug":"what-happens-when-i-disable-some-intents","children":[]},{"level":2,"title":"üëë Privileged Intents","slug":"privileged-intents","children":[]},{"level":2,"title":"‚ùó Notable Intents","slug":"notable-intents","children":[{"level":3,"title":"GUILD_PRESENCES","slug":"guild-presences","children":[]},{"level":3,"title":"GUILD_MEMBERS","slug":"guild-members","children":[]},{"level":3,"title":"MESSAGE_CONTENT","slug":"message-content","children":[]}]},{"level":2,"title":"‚öôÔ∏è Setting Intents","slug":"setting-intents","children":[{"level":3,"title":"Set All Non-Privileged Intents (Default)","slug":"set-all-non-privileged-intents-default","children":[]},{"level":3,"title":"Set All Non-Privileged Intents Except","slug":"set-all-non-privileged-intents-except","children":[]},{"level":3,"title":"Set All Intents","slug":"set-all-intents","children":[]},{"level":3,"title":"Set All Intents Except","slug":"set-all-intents-except","children":[]},{"level":3,"title":"Set Intents","slug":"set-intents","children":[]},{"level":3,"title":"Add Intents","slug":"add-intents","children":[]}]}],"content":"<h1 id=\"gateway-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#gateway-intents\" aria-hidden=\"true\">#</a> Gateway Intents</h1>\n<p>Discord allows you to &quot;subscribe&quot; to specific groups of events.\nThese &quot;subscriptions&quot; are called intent.\nDisabling intents that are not required for your bot can significantly increase your bot's performance.</p>\n<h2 id=\"list-of-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#list-of-intents\" aria-hidden=\"true\">#</a> üìã List of Intents</h2>\n<p>Below you can find a table with all intents supported by Discord.</p>\n<table>\n<thead>\n<tr>\n<th>Intent</th>\n<th>Safe to Disable</th>\n<th>Privileged</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code v-pre>GUILDS</code></td>\n<td>‚ùå</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_MEMBERS</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚úîÔ∏è</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_BANS</code></td>\n<td>‚ö†Ô∏è*</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_EMOJIS</code></td>\n<td>‚ö†Ô∏è*</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_INTEGRATIONS</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_WEBHOOKS</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_INVITES</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_VOICE_STATES</code></td>\n<td>‚ö†Ô∏è*</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_PRESENCES</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚úîÔ∏è</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_MESSAGES</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_MESSAGE_REACTIONS</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>GUILD_MESSAGE_TYPING</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>DIRECT_MESSAGES</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>DIRECT_MESSAGE_REACTIONS</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>DIRECT_MESSAGE_TYPING</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>MESSAGE_CONTENT</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚úîÔ∏è</td>\n</tr>\n<tr>\n<td><code v-pre>AUTO_MODERATION_CONFIGURATION</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n<tr>\n<td><code v-pre>AUTO_MODERATION_EXECUTION</code></td>\n<td>‚úîÔ∏è</td>\n<td>‚ùå</td>\n</tr>\n</tbody>\n</table>\n<p>* Will most likely work, but needs further testing</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">Good to know!</p>\n<p><em>Guild</em> is a synonym for servers, commonly used in Discord's API.\nSee <RouterLink to=\"/wiki/basic-tutorials/glossary/\">Glossary</RouterLink>.</p>\n</div>\n<h2 id=\"what-happens-when-i-disable-some-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-happens-when-i-disable-some-intents\" aria-hidden=\"true\">#</a> üí° What Happens When I Disable Some Intents?</h2>\n<p>When you disable some of the listed intents, Javacord will not fire events that belong to the intents and\nwill not update these specific parts of the cache.</p>\n<p>At the moment, we don't have a list which events are affected by which intents (but it will come soon‚Ñ¢Ô∏è).\nHowever, most intents should be self-explanatory.\nE.g. when you disable the <code v-pre>DIRECT_MESSAGES</code> intent, your bot will not receive any private messages.</p>\n<h2 id=\"privileged-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#privileged-intents\" aria-hidden=\"true\">#</a> üëë Privileged Intents</h2>\n<p>Some intents are defined as &quot;privileged&quot; due to the sensitive nature of the data.\nTo use these intents, you have to go to your bot in the <a href=\"https://discord.com/developers/applications\" target=\"_blank\" rel=\"noopener noreferrer\">Developer Portal<ExternalLinkIcon/></a>\n(where you created bot) and manually enable the intents:</p>\n<p><img src=\"@source/wiki/basic-tutorials/enable_privileged_intents.png\" alt=\"\"></p>\n<p>There are some additionally restrictions for bots that are in over 100 servers:</p>\n<ul>\n<li>Your bot must be verified</li>\n<li>Your bot must be whitelisted to use this intents</li>\n</ul>\n<p>Take a look at the official article from Discord about this topic and how to verify your bot:\n<a href=\"https://support.discord.com/hc/en-us/articles/360040720412\" target=\"_blank\" rel=\"noopener noreferrer\">Bot Verification and Data Whitelisting<ExternalLinkIcon/></a>.</p>\n<h2 id=\"notable-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#notable-intents\" aria-hidden=\"true\">#</a> ‚ùó Notable Intents</h2>\n<p>The following two intents are especially noteworthy: <code v-pre>GUILD_MEMBERS</code> and <code v-pre>GUILD_PRESENCES</code>.\nBesides being privileged, they have some special implications for Javacord:</p>\n<h3 id=\"guild-presences\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#guild-presences\" aria-hidden=\"true\">#</a> <code v-pre>GUILD_PRESENCES</code></h3>\n<p>This intent is required to get updates about a user's status (i.e., if they are online, what game they are playing, ...).\nAdditionally, without this intent it might take considerably longer to cache all users because of ratelimits\n(up to 10 minutes for shards with 1000 servers).\nIt is advised against setting <code v-pre>DiscordApiBuilder#setWaitForAllUsersOnStartup(true)</code> without this intent, unless absolutely necessary.</p>\n<h3 id=\"guild-members\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#guild-members\" aria-hidden=\"true\">#</a> <code v-pre>GUILD_MEMBERS</code></h3>\n<p>This intent is required to keep all users in Javacord's cache.\nWithout this intent, methods like <code v-pre>Server#getMembers()</code> or <code v-pre>DiscordApi#getCachedUsers()</code> will return empty collections.\nHowever, you will still be able to access users from objects like messages, e.g. <code v-pre>Message#getUserAuthor()</code> will still work.</p>\n<h3 id=\"message-content\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#message-content\" aria-hidden=\"true\">#</a> <code v-pre>MESSAGE_CONTENT</code></h3>\n<p>This intent is a bit different to the other as it does not act as a toggle to receive any events.\nIt's sole purpose is to receive the message content, attachments, components, and embeds.\nOtherwise, these fields will be empty when you receive a <code v-pre>Message</code> object.</p>\n<h2 id=\"setting-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setting-intents\" aria-hidden=\"true\">#</a> ‚öôÔ∏è Setting Intents</h2>\n<p>Javacord allows you to specify intents in the <code v-pre>DiscordApiBuilder</code> prior to login.\nThere are many options to set intents.\nThe following example code shows the most common ones:</p>\n<h3 id=\"set-all-non-privileged-intents-default\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-all-non-privileged-intents-default\" aria-hidden=\"true\">#</a> Set All Non-Privileged Intents (Default)</h3>\n<p>This method enables all non-privileged intents.\nThis is the default setting in Javacord.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topc secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setAllNonPrivilegedIntents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"set-all-non-privileged-intents-except\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-all-non-privileged-intents-except\" aria-hidden=\"true\">#</a> Set All Non-Privileged Intents Except</h3>\n<p>This method enabled all non-privileged intents, except the given ones.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topc secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setAllNonPrivilegedIntentsExcept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>GUILD_WEBHOOKS<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"set-all-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-all-intents\" aria-hidden=\"true\">#</a> Set All Intents</h3>\n<p>This method enabled all intents.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topc secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setAllIntents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"set-all-intents-except\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-all-intents-except\" aria-hidden=\"true\">#</a> Set All Intents Except</h3>\n<p>This method enabled all intents, except the given ones.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topc secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setAllIntentsExcept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>GUILD_PRESENCES<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>GUILD_WEBHOOKS<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"set-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-intents\" aria-hidden=\"true\">#</a> Set Intents</h3>\n<p>This method only enables the given intents.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topc secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setIntents</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>GUILDS<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>DIRECT_MESSAGES<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"add-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#add-intents\" aria-hidden=\"true\">#</a> Add Intents</h3>\n<p>This method adds the intents to the currently enabled ones(by default all non-privileged).\nThis is useful i.e. if you only want to enable 1 privileged intent like the <code v-pre>MESSAGE_CONTENT</code></p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"topc secret\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addIntents</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>MESSAGE_CONTENT<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","path":"/wiki/basic-tutorials/gateway-intents.html","keywords":["Intents"]},{"title":"Glossary","headers":[],"content":"<h1 id=\"glossary\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#glossary\" aria-hidden=\"true\">#</a> Glossary</h1>\n<p>This is a list with the most common Discord-related terms:</p>\n<ul>\n<li><strong><code v-pre>Guild</code></strong> - A synonym for <code v-pre>server</code></li>\n<li><strong><code v-pre>Selfbot</code></strong> - A client account bot, usually logged in to a user's own account</li>\n<li><strong><code v-pre>Sharding</code></strong> - Splitting a bot into several independent <code v-pre>shards</code>, see <RouterLink to=\"/wiki/advanced-topics/sharding.html\">Sharding</RouterLink></li>\n<li><strong><code v-pre>Token</code></strong> - Used to login instead of requiring a username + password</li>\n<li><strong><code v-pre>Embed</code></strong> - A &quot;fancy&quot; message, see <RouterLink to=\"/wiki/basic-tutorials/embeds.html\">Embed FAQ</RouterLink></li>\n<li><strong><code v-pre>Ratelimit</code></strong> - Prevents you from spamming actions, see <RouterLink to=\"/wiki/advanced-topics/ratelimits.html\">Ratelimit FAQ</RouterLink></li>\n<li><strong><code v-pre>Websocket</code></strong> - A <a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\" target=\"_blank\" rel=\"noopener noreferrer\">TCP<ExternalLinkIcon/></a> &quot;connection&quot; to Discord that receives events, see <a href=\"https://en.wikipedia.org/wiki/WebSocket\" target=\"_blank\" rel=\"noopener noreferrer\">Wikipedia<ExternalLinkIcon/></a></li>\n<li><strong><code v-pre>Gateway</code></strong> - The address for the <code v-pre>websocket</code></li>\n<li><strong><code v-pre>Rest</code> / <code v-pre>Rest Request</code></strong> - <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\" target=\"_blank\" rel=\"noopener noreferrer\">REST<ExternalLinkIcon/></a> is used to perform actions like sending messages. Rest Requests do not require an active websocket connection.</li>\n<li><strong><code v-pre>Activity</code></strong> - The text underneath the username, usually <code v-pre>Playing Xyz</code></li>\n<li><strong><code v-pre>Rich Presence</code></strong> - A more detailed activity, see <a href=\"https://discordapp.com/developers/docs/rich-presence/getting-approved\" target=\"_blank\" rel=\"noopener noreferrer\">Discord Docs<ExternalLinkIcon/></a></li>\n</ul>\n","path":"/wiki/basic-tutorials/glossary.html","keywords":["Guild","Selfbot","Sharding","Token","Embed","Ratelimit","Websocket","Gateway","Rest Request","Activity","Rich Presence"]},{"title":"Listeners","headers":[{"level":2,"title":"üë®‚Äçüîß Creating listeners","slug":"creating-listeners","children":[{"level":3,"title":"Inline Listeners","slug":"inline-listeners","children":[]},{"level":3,"title":"In their own class","slug":"in-their-own-class","children":[]},{"level":3,"title":"Before logging in","slug":"before-logging-in","children":[]},{"level":3,"title":"Object listeners","slug":"object-listeners","children":[]}]},{"level":2,"title":"üí£ Removing listeners","slug":"removing-listeners","children":[{"level":3,"title":"Using the returned ListenerManager","slug":"using-the-returned-listenermanager","children":[]},{"level":3,"title":"Using the removeListener(...) method","slug":"using-the-removelistener-method","children":[]}]}],"content":"<h1 id=\"listeners\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#listeners\" aria-hidden=\"true\">#</a> Listeners</h1>\n<h2 id=\"creating-listeners\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#creating-listeners\" aria-hidden=\"true\">#</a> üë®‚Äçüîß Creating listeners</h2>\n<p>Creating listeners is extremely easy in Javacord.\nYou can either use Java 8's lambda expressions to register listeners inline or just create a new class for them, if an inline listener would get too messy.</p>\n<h3 id=\"inline-listeners\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#inline-listeners\" aria-hidden=\"true\">#</a> Inline Listeners</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"in-their-own-class\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#in-their-own-class\" aria-hidden=\"true\">#</a> In their own class</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>and</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyListener</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MessageCreateListener</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMessageCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageCreateEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"before-logging-in\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#before-logging-in\" aria-hidden=\"true\">#</a> Before logging in</h3>\n<p>Sometimes it might be useful to add listeners before calling the <code v-pre>DiscordApiBuilder#login()</code> method.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// An inline listener</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">addServerBecomesAvailableListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Loaded \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// A listener in their own class</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n         <span class=\"token comment\">// Alternative syntax that can be used for classes that require a DiscordApi parameter in their constructor</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MyListener</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"top secret\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setWaitForServersOnStartup</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>Note: In most cases, it's enough to add listeners after logging in</p>\n</blockquote>\n<h3 id=\"object-listeners\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#object-listeners\" aria-hidden=\"true\">#</a> Object listeners</h3>\n<p>Another cool feature is the ability to attach listeners directly to objects. An example where this can be useful is, for example, reacting to reactions. The following code would delete the message if someone adds a üëé reaction.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>message<span class=\"token punctuation\">.</span><span class=\"token function\">addReactionAddListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getEmoji</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsEmoji</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëé\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">deleteMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeAfter</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MINUTES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p>Seems like the bot is very sensitive to criticism.</p>\n</blockquote>\n<h2 id=\"removing-listeners\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removing-listeners\" aria-hidden=\"true\">#</a> üí£ Removing listeners</h2>\n<p>There are two ways to remove a listener:</p>\n<h3 id=\"using-the-returned-listenermanager\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-the-returned-listenermanager\" aria-hidden=\"true\">#</a> Using the returned ListenerManager</h3>\n<p>Every time you register a listener, a <code v-pre>ListenerManager</code> is returned which can be used to unregister the listener:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">ListenerManager</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageCreateListener</span><span class=\"token punctuation\">></span></span> listenerManager <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do stuff</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nlistenerManager<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>This manager also has some utility methods. You can, for example, remove a listener after a given time, which can be useful for object listeners:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>message<span class=\"token punctuation\">.</span><span class=\"token function\">addReactionAddListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do stuff</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeAfter</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MINUTES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"using-the-removelistener-method\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-the-removelistener-method\" aria-hidden=\"true\">#</a> Using the <code v-pre>removeListener(...)</code> method</h3>\n<p>You can remove any listener using the <code v-pre>removeListener(...)</code> method:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">MyListener</span> listener <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napi<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\napi<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","path":"/wiki/basic-tutorials/listeners.html","keywords":["creating listeners","listener creation","ListenerManager","removeListener","remove listener"]},{"title":"Logger Configuration","headers":[{"level":2,"title":"ü•à Fallback Logger","slug":"fallback-logger","children":[]},{"level":2,"title":"ü•á Using a Proper Logging Framework","slug":"using-a-proper-logging-framework","children":[{"level":3,"title":"Adding a Logging Framework","slug":"adding-a-logging-framework","children":[]},{"level":3,"title":"Configure Your Logging Framework","slug":"configure-your-logging-framework","children":[]},{"level":3,"title":"Logging the Relevant Shard","slug":"logging-the-relevant-shard","children":[]}]}],"content":"<h1 id=\"logger-configuration\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#logger-configuration\" aria-hidden=\"true\">#</a> Logger Configuration</h1>\n<p>Logging is an important tool to keep track of what is going on in your application. Javacord uses the <a href=\"https://logging.apache.org/log4j/2.x/manual/api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Log4j 2 API<ExternalLinkIcon/></a>, which allows you to use your favorite logging framework to log messages in your own code and have all logging messages end up in the same destination. In case you do not add your own logging framework, a fallback logger is used that logs to the console.<br>\nIf you want more control, add a proper logging framework that supports your needs and configure it accordingly. You can for example configure log messages on a per-class level, change log levels during runtime, or log to a file or database.</p>\n<h2 id=\"fallback-logger\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#fallback-logger\" aria-hidden=\"true\">#</a> ü•à Fallback Logger</h2>\n<p>Javacord's fallback logger is a simple Log4j logger which always logs <code v-pre>INFO</code> level and higher. It allows you to enable <code v-pre>DEBUG</code> and <code v-pre>TRACE</code> logging manually. As log levels are hierarchical, enabling <code v-pre>TRACE</code> will also implicitly enable <code v-pre>DEBUG</code>, and disabling <code v-pre>DEBUG</code> will also implicitly disable <code v-pre>TRACE</code>.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Enable debug logging</span>\n<span class=\"token class-name\">FallbackLoggerConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDebug</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Enable trace logging</span>\n<span class=\"token class-name\">FallbackLoggerConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token function\">setTrace</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Changing the log level of the fallback logger only affects newly created loggers. Pre-existing loggers will not have their log level changed. So if you want to configure the fallback logger, you should do this as one of the first actions in your bot code. If you want to change log levels during runtime, you should use a proper logging framework like Log4j 2 Core or another library that supports this.</p>\n<p>All fallback logger messages are printed to the standard output stream (<code v-pre>System.out</code>) and thus usually to your console. If you want to log to a file, database, or anything else, you should consider using a proper logging framework which allows you to configure this behavior.</p>\n<p>This is how a log line from the fallback logger will look like:</p>\n<div class=\"language-log ext-log line-numbers-mode\"><pre v-pre class=\"language-log\"><code><span class=\"token operator\">&lt;</span>time with date            <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>level<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>logger name<span class=\"token punctuation\">,</span> usually the logging class              <span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>message            <span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>the thread context<span class=\"token punctuation\">,</span> here the shard number<span class=\"token operator\">></span>\n<span class=\"token date number\">2018-08-03</span> <span class=\"token time number\">20:00:06.080+0200</span> <span class=\"token level debug keyword\">DEBUG</span> org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>gateway<span class=\"token punctuation\">.</span>DiscordWebSocketAdapter Received HELLO packet <span class=\"token operator\">{</span>shard<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token operator\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"using-a-proper-logging-framework\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-a-proper-logging-framework\" aria-hidden=\"true\">#</a> ü•á Using a Proper Logging Framework</h2>\n<h3 id=\"adding-a-logging-framework\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#adding-a-logging-framework\" aria-hidden=\"true\">#</a> Adding a Logging Framework</h3>\n<p>Adding a logging framework of your choice is very straightforward. You can just add it as a dependency, and it will be detected by Log4j automatically. The following example adds Log4j 2 using Gradle:</p>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>dependencies <span class=\"token punctuation\">{</span> runtimeOnly <span class=\"token string\">'org.apache.logging.log4j:log4j-core:2.17.0'</span> <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>You can also use an SLF4J compatible logging framework using <code v-pre>log4j-to-slf4j</code>. The following example adds Logback Classic using Gradle:</p>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>dependencies <span class=\"token punctuation\">{</span>\n    runtimeOnly <span class=\"token string\">'org.apache.logging.log4j:log4j-to-slf4j:2.17.0'</span>\n    runtimeOnly <span class=\"token string\">'ch.qos.logback:logback-classic:1.2.3'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"configure-your-logging-framework\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#configure-your-logging-framework\" aria-hidden=\"true\">#</a> Configure Your Logging Framework</h3>\n<ul>\n<li><strong>Log4j 2</strong>: <a href=\"https://logging.apache.org/log4j/2.x/manual/configuration.html\" target=\"_blank\" rel=\"noopener noreferrer\">Log4j configuration<ExternalLinkIcon/></a></li>\n<li><strong>Logback Classic</strong>: <a href=\"https://logback.qos.ch/manual/configuration.html\" target=\"_blank\" rel=\"noopener noreferrer\">Logback configuration<ExternalLinkIcon/></a></li>\n</ul>\n<h3 id=\"logging-the-relevant-shard\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#logging-the-relevant-shard\" aria-hidden=\"true\">#</a> Logging the Relevant Shard</h3>\n<p>Javacord adds the relevant shard to each log message. The facility that stores this information has a different name depending on which logging framework you use. For Log4j 2, this is called Thread Context Map and can be added in a pattern layout with <code v-pre>%X{shard}</code>, or you can add the whole thread context map by using <code v-pre>%X</code>. For Logback Classic, it is called MDC and can be added with the same pattern expressions as for Log4j.</p>\n","path":"/wiki/basic-tutorials/logger-config.html","keywords":["log4j","log4j2","slf4j","logback","logging","logger"]},{"title":"Using the MessageBuilder","headers":[{"level":2,"title":"üïµÔ∏è‚Äç‚ôÄÔ∏è Example","slug":"example","children":[]},{"level":2,"title":"üìç Allowed Mentions","slug":"allowed-mentions","children":[]}],"content":"<h1 id=\"using-the-messagebuilder\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#using-the-messagebuilder\" aria-hidden=\"true\">#</a> Using the MessageBuilder</h1>\n<p>The <code v-pre>MessageBuilder</code> class is a more powerful alternative to the <code v-pre>TextChannel#sendMessage(...)</code> method.</p>\n<p>It can be used to construct more complex messages and supports some additional features that are not possible\nwith a simple <code v-pre>TextChannel#sendMessage(...)</code> call.</p>\n<h2 id=\"example\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#example\" aria-hidden=\"true\">#</a> üïµÔ∏è‚Äç‚ôÄÔ∏è Example</h2>\n<p>The following code</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Look at these \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"awesome\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageDecoration</span><span class=\"token punctuation\">.</span>BOLD<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageDecoration</span><span class=\"token punctuation\">.</span>UNDERLINE<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" animal pictures! üòÉ\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">appendCode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"System.out.println(\\\"Sweet!\\\");\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addAttachment</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/Users/Bastian/Pictures/kitten.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addAttachment</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/Users/Bastian/Pictures/puppy.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setEmbed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">EmbedBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WOW\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setDescription</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Really cool pictures!\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>ORANGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>will be displayed like this:</p>\n<p><img src=\"https://i.imgur.com/AP1cjDf.png\" alt=\"\"></p>\n<h2 id=\"allowed-mentions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#allowed-mentions\" aria-hidden=\"true\">#</a> üìç Allowed Mentions</h2>\n<p>The allowed mentions object lets you control what should be mentioned (pinged) in a message if it contains mentions.</p>\n<p>The following code will ping:</p>\n<ul>\n<li>The user0</li>\n<li>All mentioned roles in the message</li>\n</ul>\n<p>And will not ping:</p>\n<ul>\n<li>@everyone and @here</li>\n<li>The user1</li>\n</ul>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">AllowedMentions</span> allowedMentions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AllowedMentionsBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span>user0<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setMentionRoles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setMentionEveryoneAndHere</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedMentions</span><span class=\"token punctuation\">(</span>allowedMentions<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>user0<span class=\"token punctuation\">.</span><span class=\"token function\">getMentionTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">.</span><span class=\"token function\">getMentionTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">.</span><span class=\"token function\">getMentionTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>role2<span class=\"token punctuation\">.</span><span class=\"token function\">getMentionTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@everyone\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>If you add a user to the mentions object and set <code v-pre>setMentionUsers(true)</code> it will ping every mentioned user. The same applies for <code v-pre>setMentionRoles(true)</code></p>\n","path":"/wiki/basic-tutorials/message-builder.html","keywords":["create messages","message creation","sendMessage"]},{"title":"Running and Deploying your Bot","headers":[{"level":2,"title":"üë∑ Running from your IDE","slug":"running-from-your-ide","children":[{"level":3,"title":"IntelliJ IDEA","slug":"intellij-idea","children":[]},{"level":3,"title":"Eclipse","slug":"eclipse","children":[]}]},{"level":2,"title":"üì¶ Deploying and Running as a Standalone Application","slug":"deploying-and-running-as-a-standalone-application","children":[{"level":3,"title":"Building a Distribution with Gradle","slug":"building-a-distribution-with-gradle","children":[]},{"level":3,"title":"Building a Distribution with Maven","slug":"building-a-distribution-with-maven","children":[]},{"level":3,"title":"Running","slug":"running","children":[]}]},{"level":2,"title":"üí© Building a Fat Jar","slug":"building-a-fat-jar","children":[{"level":3,"title":"With Gradle","slug":"with-gradle","children":[]},{"level":3,"title":"With Maven","slug":"with-maven","children":[]}]}],"content":"<h1 id=\"running-and-deploying-your-bot\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#running-and-deploying-your-bot\" aria-hidden=\"true\">#</a> Running and Deploying your Bot</h1>\n<p>If you took the time to write a bot, at some point you'll also want to run it, either for use in production or for debugging from the IDE.</p>\n<h2 id=\"running-from-your-ide\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#running-from-your-ide\" aria-hidden=\"true\">#</a> üë∑ Running from your IDE</h2>\n<p>While developing your bot, you will want to run your bot directly from the IDE in order to quickly test changes and new features. For this, create a Run/Debug Configuration in your IDE of choice with your bot's main class. Remember to also add any necessary parameters and environment variables.</p>\n<p>A working Run/Debug configuration will also enable you to run your bot with a debugger. A debugger is often considered a developer's most important tool, so make sure to familiarize yourself with the debugging integration for your IDE of choice.</p>\n<h3 id=\"intellij-idea\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#intellij-idea\" aria-hidden=\"true\">#</a> IntelliJ IDEA</h3>\n<p>This assumes your project is set up correctly, preferably with <a href=\"/wiki/getting-started/intellij-gradle\">Gradle</a>, can be built without errors, and does not yet have any run/debug configurations.</p>\n<p><strong>1.</strong> Locate and click the <code v-pre>Add Configuration...</code> button in the top bar next to the start button.</p>\n<p><img src=\"@source/wiki/basic-tutorials/running-idea-configurations-empty.png\" alt=\"\"></p>\n<p><strong>2.</strong> In the newly opened window, click the <code v-pre>+</code> button in the top left and select <code v-pre>Application</code></p>\n<p><strong>3.</strong> Give a name for your configuration and select the module to use the classpath of (usually <code v-pre>yourproject.main</code>).</p>\n<p><strong>4.</strong> Select your Main class. Use the <code v-pre>...</code> button to search for it or provide the fully qualified name. If it can not be found, you most likely selected the wrong module in step 3.</p>\n<p><strong>5.</strong> Optional: Set command line arguments and environment variables. For the environment variables, use the button to the right of the input field for a more convenient input window.</p>\n<p><strong>6.</strong> Click <code v-pre>Apply</code> to finalize the configuration, then <code v-pre>OK</code> to close the window.</p>\n<p><img src=\"@source/wiki/basic-tutorials/running-idea-configurations-create.png\" alt=\"\"></p>\n<p><strong>7.</strong> Select your configuration in the drop-down menu and run or debug it with the buttons to the right.</p>\n<p><img src=\"@source/wiki/basic-tutorials/running-idea-configurations-bar.png\" alt=\"\"></p>\n<h3 id=\"eclipse\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#eclipse\" aria-hidden=\"true\">#</a> Eclipse</h3>\n<p>This assumes your project is set up correctly, can be built without errors, and does not yet have any run/debug configurations.</p>\n<p><strong>1.</strong> In the menu bar, click &quot;Run&quot; then &quot;Run Configurations...&quot;.</p>\n<p><strong>2.</strong> In the newly opened window, select &quot;Java Application&quot; on the left side, then click the leftmost button in the row above the tree view. A new configuration will appear.</p>\n<p><img src=\"@source/wiki/basic-tutorials/running-eclipse-configurations-empty.png\" alt=\"\"></p>\n<p><strong>3.</strong> Give a name to your configuration.</p>\n<p><strong>4.</strong> Set the project and the main class. To easily select it, use the &quot;Browse...&quot; and &quot;Search...&quot; buttons.</p>\n<p><strong>5.</strong> Optional: Set command line (and VM) arguments as well as environment variables in their respective tabs.</p>\n<p><strong>6.</strong> Click <code v-pre>Apply</code> to save your configuration, then <code v-pre>Close</code> to close the window.</p>\n<p><img src=\"@source/wiki/basic-tutorials/running-eclipse-configurations-create.png\" alt=\"\"></p>\n<p><strong>7.</strong> Run or debug your bot via the Buttons in the top row, the <code v-pre>Run</code> menu, or the shortcuts Ctrl+F11 for running and F11 for debugging.</p>\n<p><img src=\"@source/wiki/basic-tutorials/running-eclipse-configurations-bar.png\" alt=\"\"></p>\n<h2 id=\"deploying-and-running-as-a-standalone-application\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#deploying-and-running-as-a-standalone-application\" aria-hidden=\"true\">#</a> üì¶ Deploying and Running as a Standalone Application</h2>\n<p>Running from the IDE is only recommended during development and strongly discouraged for production use. Generally, you'll want your build tool to create a convenient distribution format for you to use.</p>\n<h3 id=\"building-a-distribution-with-gradle\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#building-a-distribution-with-gradle\" aria-hidden=\"true\">#</a> Building a Distribution with Gradle</h3>\n<ClientOnly>\n    <LatestVersion/>\n</ClientOnly>\n<p>For Gradle, only two further steps are necessary for a basic application. On top of the steps described in the <a href=\"/wiki/getting-started/intellij-gradle\">Getting Started Section</a>, also add the <a href=\"https://docs.gradle.org/current/userguide/application_plugin.html\" target=\"_blank\" rel=\"noopener noreferrer\">Application Plugin<ExternalLinkIcon/></a> and define your <code v-pre>mainClass</code> as the fully qualified name of your main class. If you're using an older version of Gradle (earlier than 6.4), the attribute is instead called <code v-pre>mainClassName</code>.</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">INFO</p>\n<p>As with many Gradle solutions, there is actually a whole lot going on under the hood. The <code v-pre>application</code> plugin implicitly also applies the <code v-pre>java</code> and <code v-pre>distribution</code> plugins. Refer to the documentations of the involved plugins for more ways to fine-tune the process.</p>\n</div>\n<p>Your modified build file should now look similar to this:</p>\n<CodeGroup>\n  <CodeGroupItem title=\"build.gradle.kts\" active>\n<div class=\"language-kts ext-kts line-numbers-mode\"><pre v-pre class=\"language-kts\"><code>plugins <span class=\"token punctuation\">{</span>\n    application\n<span class=\"token punctuation\">}</span>\n \nversion <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"1.0.0\"</span></span>\n \njava <span class=\"token punctuation\">{</span>\n    sourceCompatibility <span class=\"token operator\">=</span> JavaVersion<span class=\"token punctuation\">.</span>VERSION_1_8\n<span class=\"token punctuation\">}</span>\n \napplication <span class=\"token punctuation\">{</span>\n    mainClass<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"com.github.yourname.BotMain\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// mainClassName.set(\"com.github.yourname.BotMain\")  // Gradle &lt; 6.4</span>\n<span class=\"token punctuation\">}</span>\n \nrepositories <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n \ndependencies <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">implementation</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"org.javacord:javacord:{{latestVersion}}\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"build.gradle\">\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>plugins <span class=\"token punctuation\">{</span>\n    id <span class=\"token string\">'application'</span>\n<span class=\"token punctuation\">}</span>\n \nversion <span class=\"token string\">'1.0.0'</span>\n \njava <span class=\"token punctuation\">{</span>\n    sourceCompatibility <span class=\"token operator\">=</span> JavaVersion<span class=\"token punctuation\">.</span>VERSION_1_8\n<span class=\"token punctuation\">}</span>\n \napplication <span class=\"token punctuation\">{</span>\n    mainClass <span class=\"token operator\">=</span> <span class=\"token string\">'com.github.yourname.BotMain'</span>\n    <span class=\"token comment\">// mainClassName = 'com.github.yourname.BotMain' // for Gradle versions &lt; 6.4</span>\n<span class=\"token punctuation\">}</span>\n \nrepositories <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n \ndependencies <span class=\"token punctuation\">{</span>\n    implementation <span class=\"token string\">'org.javacord:javacord:{{latestVersion}}'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n</CodeGroup>\n<p>Now you can execute the <code v-pre>distZip</code> or <code v-pre>distTar</code> task with Gradle. The task will create a distribution and package it in an archive file that will be placed in the <code v-pre>build/distributions</code> directory. Extract the content of those files on your server or whichever machine you want to run your bot on.</p>\n<p>The distribution usually only contains the directories <code v-pre>bin</code> and <code v-pre>lib</code>. From the distribution directory, run either <code v-pre>bin/yourbot</code> or <code v-pre>bin/yourbot.bat</code>, depending on whether you're running the bot on Linux / macOS or windows.</p>\n<h3 id=\"building-a-distribution-with-maven\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#building-a-distribution-with-maven\" aria-hidden=\"true\">#</a> Building a Distribution with Maven</h3>\n<p>For Maven, add the <a href=\"https://www.mojohaus.org/appassembler/appassembler-maven-plugin/usage-program.html\" target=\"_blank\" rel=\"noopener noreferrer\">Appassembler<ExternalLinkIcon/></a> plugin to your <code v-pre>pom.xml</code>. The plugin will create a distribution, but not bundle it in a neat archive file, so we'll also add the assembly plugin. We'll bind both to the <code v-pre>package</code> lifecycle phase.</p>\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span><span class=\"token punctuation\">></span></span>\n  ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.codehaus.mojo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>appassembler-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>programs</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>program</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mainClass</span><span class=\"token punctuation\">></span></span>org.javacord.examplebot.Main<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mainClass</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>examplebot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>program</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>programs</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>create-distribution<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phase</span><span class=\"token punctuation\">></span></span>package<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phase</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>assemble<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>maven-assembly-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>descriptors</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token comment\">&lt;!-- This must match the location of the descriptor --></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>descriptor</span><span class=\"token punctuation\">></span></span>src/assembly/distribution.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>descriptor</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>descriptors</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>create-archive<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phase</span><span class=\"token punctuation\">></span></span>package<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phase</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n                            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>single<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Sadly, none of the built-in assembly descriptors match our use case, so we'll put our custom one into <code v-pre>src/assembly/distribution.xml</code>:</p>\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>assembly</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>distribution<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>formats</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!-- See https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html for supported formats --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>format</span><span class=\"token punctuation\">></span></span>tar.gz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>format</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>format</span><span class=\"token punctuation\">></span></span>tar.bz2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>format</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>format</span><span class=\"token punctuation\">></span></span>zip<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>format</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>formats</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fileSets</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fileSet</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- This will also include your project readme, license and similar files--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">></span></span>${project.basedir}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>outputDirectory</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>outputDirectory</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>includes</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>README*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>LICENSE*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>NOTICE*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>includes</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fileSet</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fileSet</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!-- Change this if you reconfigured the appassembler output directory --></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">></span></span>${project.build.directory}/appassembler<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>outputDirectory</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>outputDirectory</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fileSet</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fileSets</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>assembly</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Now when you execute <code v-pre>mvn package</code>, a distribution with start scripts for Windows and Linux/macOS will be generated which is then packaged into archive files for every format you specified in the assembly descriptor. You can find the raw distribution (without readme and license files) in <code v-pre>target/appassembler</code> and the archive files directly in <code v-pre>target</code>.</p>\n<h3 id=\"running\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#running\" aria-hidden=\"true\">#</a> Running</h3>\n<p>After creating your distribution via Gradle or Maven and extracting/copying it to the machine you want to run it from, you should have a directory containing both a <code v-pre>bin</code> and a <code v-pre>lib</code> (or <code v-pre>repo</code>) directory. Depending on your platform, you can now run the <code v-pre>bin/yourbot</code> or <code v-pre>bin/yourbot.bat</code> script.</p>\n<p>These automatically generated scripts will then invoke java with your dependencies on the classpath and run your main class. Your working directory will be the directory you ran the script from.</p>\n<h2 id=\"building-a-fat-jar\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#building-a-fat-jar\" aria-hidden=\"true\">#</a> üí© Building a Fat Jar</h2>\n<p>Although it is an abuse of the way java works, sometimes you will be forced to create a fat jar, or an uber jar. This is a jar file that contains your application and all its dependencies. This is sometimes used as a lazy way of building a convenient distribution, but should be foregone in favor of the above mentioned distributions.</p>\n<p>However, in some cases (more often than not Bukkit/Spigot addons) it is necessary to provide a fat jar, since the host application's loading mechanism can only handle singular jar files. If you are subject to such a case of bad design, please complain to the maintainer of whatever host application you are using, then use the following instructions to forsake all that is good and just and create a fat jar. Remember to grit your teeth the whole time.</p>\n<h3 id=\"with-gradle\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#with-gradle\" aria-hidden=\"true\">#</a> With Gradle</h3>\n<p>For Gradle, use the <a href=\"https://github.com/johnrengelman/shadow\" target=\"_blank\" rel=\"noopener noreferrer\">shadow<ExternalLinkIcon/></a> plugin. If you want the fat jar to be executable, you will need to specify a main class via the application plugin.</p>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>plugins <span class=\"token punctuation\">{</span>\n    id <span class=\"token string\">'java'</span>\n    # <span class=\"token punctuation\">...</span>\n    id <span class=\"token string\">'com.github.johnrengelman.shadow'</span> version <span class=\"token string\">'7.1.2'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>With <code v-pre>gradlew shadowJar</code> you can now create a shaded (fat) jar. It will be named <code v-pre>build/libs/yourbot-1.0.0-all.jar</code> or similar, according to your project settings.</p>\n<h3 id=\"with-maven\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#with-maven\" aria-hidden=\"true\">#</a> With Maven</h3>\n<p>For Maven, add the <a href=\"https://maven.apache.org/plugins/maven-shade-plugin/usage.html\" target=\"_blank\" rel=\"noopener noreferrer\">maven-shade-plugin<ExternalLinkIcon/></a> to your build. As with the other solutions, configure your main class.</p>\n<p>Some of your dependencies might be signed .jar files. Unfortunately, this will likely break your fat jar. Remove the signatures by defining an exclusion filter as demonstrated below. Let the thought that you had to disable a security feature just to make this work serve as a reminder that creating a fat jar is not how jars are meant to be used.</p>\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span><span class=\"token punctuation\">></span></span>\n  ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.maven.plugins<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>maven-shade-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.2.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>shadedArtifactAttached</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>shadedArtifactAttached</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>shadedClassifierName</span><span class=\"token punctuation\">></span></span>fat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>shadedClassifierName</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transformers</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transformer</span> <span class=\"token attr-name\">implementation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.apache.maven.plugins.shade.resource.ManifestResourceTransformer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>manifestEntries</span><span class=\"token punctuation\">></span></span>\n                       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Main-Class</span><span class=\"token punctuation\">></span></span>com.github.yourname.BotMain<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Main-Class</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>manifestEntries</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transformer</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transformers</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filters</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifact</span><span class=\"token punctuation\">></span></span>*:*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifact</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>excludes</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclude</span><span class=\"token punctuation\">></span></span>META-INF/*.SF<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclude</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclude</span><span class=\"token punctuation\">></span></span>META-INF/*.DSA<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclude</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclude</span><span class=\"token punctuation\">></span></span>META-INF/*.RSA<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclude</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>excludes</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filters</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phase</span><span class=\"token punctuation\">></span></span>package<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phase</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">></span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">></span></span>shade<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Running <code v-pre>mvn package</code> will now additionally create the <code v-pre>yourbot-1.0.0-fat.jar</code>.</p>\n","path":"/wiki/basic-tutorials/running.html","keywords":["run bot","running bot","execute bot","deploy","deployment","application"]},{"title":"Completable Futures","headers":[{"level":2,"title":"ü§î What the heck is a future?","slug":"what-the-heck-is-a-future","children":[]},{"level":2,"title":"üìñ Methods","slug":"methods","children":[{"level":3,"title":"join()","slug":"join","children":[]},{"level":3,"title":"thenAccept(...)","slug":"thenaccept","children":[]},{"level":3,"title":"exceptionally(...)","slug":"exceptionally","children":[]},{"level":3,"title":"thenCompose()","slug":"thencompose","children":[]}]},{"level":2,"title":"üìö Further Read","slug":"further-read","children":[]}],"content":"<h1 id=\"completable-futures\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#completable-futures\" aria-hidden=\"true\">#</a> Completable Futures</h1>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>This tutorial assumes that you are familiar with lambda expressions.\nTake a look at the <RouterLink to=\"/wiki/essential-knowledge/lambdas/\">lambda introduction</RouterLink> first, if you are not!</p>\n</div>\n<p>As Javacord is heavily multithreaded, you must understand the concept of\n<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html\" target=\"_blank\" rel=\"noopener noreferrer\">Futures<ExternalLinkIcon/></a>\nin general, as well as their most common implementation, the\n<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html\" target=\"_blank\" rel=\"noopener noreferrer\">CompletableFuture<ExternalLinkIcon/></a>.\nThis little introduction gives you a quick overview of the basics you need to know in order to work with Futures.</p>\n<h2 id=\"what-the-heck-is-a-future\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-the-heck-is-a-future\" aria-hidden=\"true\">#</a> ü§î What the heck is a future?</h2>\n<p>A future is basically a wrapper, that will contain a value in the future but might not contain it right now.\nThis is useful, if a method call requires some time and should not block the execution of your current code.\nYou can easily see the difference with a primitive speed comparison:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">long</span> currentTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Prints \"4 ms\"</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> currentTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" ms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">long</span> currentTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test 5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Prints \"894 ms\"</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> currentTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" ms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p><code v-pre>join()</code> blocks the current thread until the method finished. This will be explained later.</p>\n</div>\n<h2 id=\"methods\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#methods\" aria-hidden=\"true\">#</a> üìñ Methods</h2>\n<h3 id=\"join\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#join\" aria-hidden=\"true\">#</a> join()</h3>\n<p>The <code v-pre>join</code> method blocks the current thread until the method finished.\nIt returns the method's result or throws a <code v-pre>CompletionException</code> if anything failed.</p>\n<p>The following example would create a new text channel in a given <code v-pre>server</code> and sends a message directly afterwards.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// Create the channel</span>\n<span class=\"token class-name\">ServerTextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new-channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Send a message in the new channel</span>\n<span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Adds an reaction to the message. Even though this method doesn't return anything,</span>\n<span class=\"token comment\">// join() ensures, that an exception is thrown in case something went wrong</span>\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëç\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container danger\"><p class=\"custom-container-title\">DANGER</p>\n<p>You should avoid <code v-pre>join()</code> for methods which will be called frequently.</p>\n</div>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p>While <code v-pre>join()</code> can become a performance issue when you call it very frequently, it is very convenient to use and easy to understand.\nIf you are new to programming and just want to get your first bot working, this is a good method to start with.</p>\n<p>Once you gathered more experience, we highly advise against using <code v-pre>join</code> as it negatively impacts your bot's performance!</p>\n</div>\n<h3 id=\"thenaccept\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#thenaccept\" aria-hidden=\"true\">#</a> thenAccept(...)</h3>\n<p>The <code v-pre>thenAccept</code> method accepts a <code v-pre>Consumer</code>, that consumes the result of the method and is executed asynchronously.\nIt is the method you usually want to use most of the time.</p>\n<p>The following example would create a new text channel in a given <code v-pre>server</code> and send a message directly afterwards.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new-channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>channel <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëç\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container danger\"><p class=\"custom-container-title\">DANGER</p>\n<p>The example code above has a major problem: Any exception that might occur will be completely ignored.\nThis makes it very hard to find bugs.</p>\n<p>For example, if your bot doesn't have the permissions to create a new channel, it will just fail silently.</p>\n</div>\n<h3 id=\"exceptionally\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#exceptionally\" aria-hidden=\"true\">#</a> exceptionally(...)</h3>\n<p>The <code v-pre>exceptionally</code> method accepts a <code v-pre>Function</code> as parameter, which consumes possible exceptions and returns a fallback value.</p>\n<p>The following example would create a new text channel in a given <code v-pre>server</code> and send a message directly afterwards.\nIf something fails (e.g., if the bot isn't allowed to create a text channel in the server), it will log an exception.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new-channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>channel <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëç\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Adding the reaction failed</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Message sending failed</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Channel creation failed    </span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Wow! This looks ugly ü§Æ.\nBut worry not! There are many options to improve this code!</p>\n<p>To make things simpler for you, Javacord has the <code v-pre>ExceptionLogger</code> class, which can be used here.\nIt logs every exception you didn't catch manually.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new-channel\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>channel <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëç\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Okay! This is at least a little better, but still not really perfect ü§î.</p>\n<h3 id=\"thencompose\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#thencompose\" aria-hidden=\"true\">#</a> thenCompose()</h3>\n<p>The <code v-pre>thenCompose</code> methods allows you to chain futures.\nIt takes a <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\" target=\"_blank\" rel=\"noopener noreferrer\">Function<ExternalLinkIcon/></a> as parameter, that\nconsumes the future's value and expects a new future to be returned.</p>\n<p>The example to create a text channel can now be written like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new-channel\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">.</span><span class=\"token function\">thenCompose</span><span class=\"token punctuation\">(</span>channel <span class=\"token operator\">-></span> channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">thenCompose</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">-></span> message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëç\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Finally üéâ! Now we only need a single <code v-pre>exceptionally(...)</code> call at the end.\nWe also got rid of the nested callbacks (usually referred to as &quot;callback hell&quot;).</p>\n<p>For better understanding, here's the example with comments that tell you the type at each line:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerTextChannelBuilder</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ServerTextChannelBuilder</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new-channel\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ServerTextChannelBuilder</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// CompletableFuture&lt;ServerTextChannel></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">thenCompose</span><span class=\"token punctuation\">(</span>channel <span class=\"token operator\">-></span> channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// CompletableFuture&lt;Message></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">thenCompose</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">-></span> message<span class=\"token punctuation\">.</span><span class=\"token function\">addReaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"üëç\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// CompletableFuture&lt;Void></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">exceptionally</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// CompletableFuture&lt;Void></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"further-read\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#further-read\" aria-hidden=\"true\">#</a> üìö Further Read</h2>\n<p>This tutorial only focuses on the absolute basics.\nFor a more detailed introduction to CompletableFutures, you can take a look at\n<a href=\"https://www.callicoder.com/java-8-completablefuture-tutorial/\" target=\"_blank\" rel=\"noopener noreferrer\">this tutorial<ExternalLinkIcon/></a>.</p>\n<p>You should also take a look at the JavaDoc for a complete list of methods: <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html\" target=\"_blank\" rel=\"noopener noreferrer\">CompletableFuture JavaDoc<ExternalLinkIcon/></a>.</p>\n","path":"/wiki/essential-knowledge/completable-futures.html","keywords":["CompletableFuture","exceptionally","ExceptionLogger","join","thenAcceptAsync"]},{"title":"Lambdas","headers":[{"level":2,"title":"üìö Further Read","slug":"further-read","children":[]}],"content":"<h1 id=\"lambdas\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lambdas\" aria-hidden=\"true\">#</a> Lambdas</h1>\n<p>Lambdas are used to implement <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html\" target=\"_blank\" rel=\"noopener noreferrer\">functional interfaces<ExternalLinkIcon/></a>.\nSimply said, functional interfaces are interfaces with a single method definition.\nAll listeners in Javacord are functional interfaces and look like this internally (simplified):</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">MessageCreateListener</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">onMessageCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageCreateEvent</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Before Java 8, you would have implemented this kind of listener as an <a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html\" target=\"_blank\" rel=\"noopener noreferrer\">anonymous class<ExternalLinkIcon/></a>, which would look like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageCreateListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMessageCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageCreateEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Do stuff</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">pinMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>In Java 8, this can be replaced with a lambda expression, which does exactly the same thing, but in a more readable fashion.\nThe method parameter (in this case <code v-pre>event</code>) is written in front of the <code v-pre>-&gt;</code> arrow, and the method body is written after it.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do stuff</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">pinMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p>If the method has more than one parameter, it would look like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token punctuation\">(</span>param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div></div>\n<p>There's even a shorter version: If you are only executing one statement, you can get rid of the <code v-pre>{ }</code> brackets as well:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> event<span class=\"token punctuation\">.</span><span class=\"token function\">pinMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>However, the above method can be shortened even more, by replacing the lambda expression with a so called &quot;<a href=\"https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html\" target=\"_blank\" rel=\"noopener noreferrer\">method reference<ExternalLinkIcon/></a>&quot;.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageEvent</span><span class=\"token operator\">::</span><span class=\"token function\">pinMessage</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>There are also plenty classes in Java 8, that make use of lambda expressions.\nOne example would be the Optional class, which is explained <RouterLink to=\"/wiki/essential-knowledge/optionals/\">here</RouterLink>.</p>\n<h2 id=\"further-read\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#further-read\" aria-hidden=\"true\">#</a> üìö Further Read</h2>\n<p>This tutorial only focuses on the absolute basics.\nFor an in-depth introduction to lambda expressions, you can take a look at\n<a href=\"https://www.oracle.com/technical-resources/articles/java/architect-lambdas-part1.html\" target=\"_blank\" rel=\"noopener noreferrer\">Oracle's article about lambda expressions<ExternalLinkIcon/></a>.</p>\n","path":"/wiki/essential-knowledge/lambdas.html","keywords":["lambdas"]},{"title":"Optionals","headers":[{"level":2,"title":"üí™ Motivation","slug":"motivation","children":[{"level":3,"title":"The old way of doing it","slug":"the-old-way-of-doing-it","children":[]},{"level":3,"title":"The new way of doing it","slug":"the-new-way-of-doing-it","children":[]}]},{"level":2,"title":"üìñ Methods","slug":"methods","children":[{"level":3,"title":"get()","slug":"get","children":[]},{"level":3,"title":"isPresent()","slug":"ispresent","children":[]},{"level":3,"title":"orElse(...)","slug":"orelse","children":[]},{"level":3,"title":"ifPresent(...)","slug":"ifpresent","children":[]},{"level":3,"title":"filter(...)","slug":"filter","children":[]},{"level":3,"title":"map(...)","slug":"map","children":[]},{"level":3,"title":"flatMap(...)","slug":"flatmap","children":[]}]},{"level":2,"title":"üìö Further Read","slug":"further-read","children":[]}],"content":"<h1 id=\"optionals\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#optionals\" aria-hidden=\"true\">#</a> Optionals</h1>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>This tutorial assumes that you are familiar with lambda expressions.\nTake a look at the <RouterLink to=\"/wiki/essential-knowledge/lambdas/\">lambda introduction</RouterLink> first, if you are not!</p>\n</div>\n<h2 id=\"motivation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#motivation\" aria-hidden=\"true\">#</a> üí™ Motivation</h2>\n<p>The Optional class is widely used in Javacord.\nBasically, every method that might return a <code v-pre>null</code> value will return an Optional in Javacord instead.\nOptionals help you to avoid <code v-pre>NullPointerExceptions</code> and make it very clear if a method may not have a result.\nHere's a small example:</p>\n<h3 id=\"the-old-way-of-doing-it\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#the-old-way-of-doing-it\" aria-hidden=\"true\">#</a> The old way of doing it</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCachedUserById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"the-new-way-of-doing-it\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#the-new-way-of-doing-it\" aria-hidden=\"true\">#</a> The new way of doing it</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">getCachedUserById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ifPresent</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">-></span> \n  user<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>You can imagine an <code v-pre>Optional</code> like a box üì¶ that may or may not contain a value.\nBefore accessing this value, you have to &quot;unpack&quot; this box first.</p>\n<h2 id=\"methods\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#methods\" aria-hidden=\"true\">#</a> üìñ Methods</h2>\n<p>The Optional class has many useful methods which can all be found in the <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaDocs<ExternalLinkIcon/></a>.\nThis tutorial gives a short introduction to the most common ones.</p>\n<h3 id=\"get\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#get\" aria-hidden=\"true\">#</a> get()</h3>\n<p>The <code v-pre>get</code> method returns the value of the Optional or throws a <code v-pre>NoSuchElementException</code> if it does not contain a value.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">TextChannel</span> channel <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getTextChannelById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nchannel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container danger\"><p class=\"custom-container-title\">DANGER</p>\n<p>You should never use this method blindly but only if you are <strong>100%</strong> sure the optional contains a value.</p>\n<p>Every time you use this method carelessly, a kitten dies üôÄ!\nTrue story.</p>\n</div>\n<h3 id=\"ispresent\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ispresent\" aria-hidden=\"true\">#</a> isPresent()</h3>\n<p>The <code v-pre>isPresent</code> methods checks, if the Optional contains a value.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TextChannel</span><span class=\"token punctuation\">></span></span> channel <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getTextChannelById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">.</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// A text channel with the id 123 exists. It's safe to call #get() now</span>\n  channel<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"orelse\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#orelse\" aria-hidden=\"true\">#</a> orElse(...)</h3>\n<p>The <code v-pre>orElse</code> methods returns the value of the Optional if it is present. Otherwise, it returns the given default value.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// The user may not have a nickname on the given server. </span>\n<span class=\"token comment\">// In this case, we use the user's \"regular\" name.</span>\n<span class=\"token class-name\">String</span> displayName <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>The example above is (mostly) equivalent to the example below but much more concise.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">String</span> displayName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> nickname <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">.</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  displayName <span class=\"token operator\">=</span> nickname<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  displayName <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p>In this case you can just use <code v-pre>user.getDisplayName(server)</code> instead.</p>\n</div>\n<h3 id=\"ifpresent\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ifpresent\" aria-hidden=\"true\">#</a> ifPresent(...)</h3>\n<p>The <code v-pre>ifPresent</code> method is very similar to an <code v-pre>if (value != null) { ... }</code> check.\nIt takes a <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Consumer.html\" target=\"_blank\" rel=\"noopener noreferrer\">Consumer<ExternalLinkIcon/></a> as it's argument.\nThis consumer is called if the Optional contains a value.\nTogether with lambda expressions this can be a very handy method.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">getTextChannelById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ifPresent</span><span class=\"token punctuation\">(</span>channel <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n  channel<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>The example above is (mostly) equivalent to the example below but more concise.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TextChannel</span><span class=\"token punctuation\">></span></span> channel <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getTextChannelById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">.</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  channel<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"filter\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#filter\" aria-hidden=\"true\">#</a> filter(...)</h3>\n<p>The <code v-pre>filter</code> method filters the Optional for a given criteria.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> botUser <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCachedUserById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">isBot</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>The example above is equivalent to the example below but more concise.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> user <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCachedUserById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> botUser<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  botUser <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  botUser <span class=\"token operator\">=</span> <span class=\"token class-name\">Optional</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#map\" aria-hidden=\"true\">#</a> map(...)</h3>\n<p>The <code v-pre>map</code> method &quot;converts&quot; the type of an Optional.\nThis is useful, if the type of an Optional does not contain the final value you need.</p>\n<p>The following example gets the name of the bots current activity (the &quot;Playing xyz&quot; status) or &quot;None&quot; if the bot has no current activity.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">String</span> activityName <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getYourself</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>For better understanding, here's the exact same code but with the types as comments:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">String</span> activityName <span class=\"token operator\">=</span>  api<span class=\"token punctuation\">.</span><span class=\"token function\">getYourself</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// User</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">getActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;Activity></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;String></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"flatmap\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#flatmap\" aria-hidden=\"true\">#</a> flatMap(...)</h3>\n<p>The <code v-pre>flatMap</code> method if very similar to the <code v-pre>map</code> methods.\nIt is used to map values that itself are Optionals to prevent Optional nesting (a &quot;box in a box&quot;).</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">String</span> activityName <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCachedUserById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;User></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">getActivity</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;Activity></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;String></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Without <code v-pre>flatMap</code>, the code would look like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">String</span> activityName <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getCachedUserById</span><span class=\"token punctuation\">(</span><span class=\"token number\">123L</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;User></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">getActivity</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;Optional&lt;Activity>></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Optional</span><span class=\"token operator\">::</span><span class=\"token function\">isPresent</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;Optional&lt;Activity>></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Optional</span><span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;Activity></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional&lt;String></span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"further-read\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#further-read\" aria-hidden=\"true\">#</a> üìö Further Read</h2>\n<p>This tutorial only focuses on the absolute basics.\nFor an in-depth introduction to Optionals, you can take a look at\n<a href=\"https://www.oracle.com/technical-resources/articles/java/java8-optional.html\" target=\"_blank\" rel=\"noopener noreferrer\">Oracle's article about optionals<ExternalLinkIcon/></a>.</p>\n","path":"/wiki/essential-knowledge/optionals.html","keywords":[null,"ifPresent","isPresent","orElse"]},{"title":"Introduction","headers":[{"level":2,"title":"üìö Structure of the wiki","slug":"structure-of-the-wiki","children":[]},{"level":2,"title":"ü§ù Support","slug":"support","children":[]}],"content":"<h1 id=\"introduction\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#introduction\" aria-hidden=\"true\">#</a> Introduction</h1>\n<p>Welcome to the Javacord wiki! üëã</p>\n<p>This wiki will help you to get started with your first Discord bot as fast as possible.</p>\n<h2 id=\"structure-of-the-wiki\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#structure-of-the-wiki\" aria-hidden=\"true\">#</a> üìö Structure of the wiki</h2>\n<p>The wiki is divided into four groups:</p>\n<ul>\n<li><strong>Getting Started</strong> focuses on teaching you how to setup up everything to get the most basic bot working.</li>\n<li><strong>Basic tutorials</strong> contains articles about various concepts and classes of Javacord. Take a look at the headlines of each article and decide yourself, if it is relevant for you.</li>\n<li><strong>Advanced Topics</strong> focuses on some more advanced topics that are not strictly necessary to start working with Javacord, but might become handy later on.</li>\n<li><strong>Essential Knowledge</strong> teaches you the most important Java features/classes that you should know to comfortably work with Javacord. If you already have decent Java knowledge, you can skip this completely.</li>\n</ul>\n<h2 id=\"support\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#support\" aria-hidden=\"true\">#</a> ü§ù Support</h2>\n<p>While the wiki is great and covers many aspects of Javacord, we highly recommended you to join our Discord server if you have any questions:</p>\n<ul>\n<li>Join the <strong><a href=\"https://discord.gg/javacord\" target=\"_blank\" rel=\"noopener noreferrer\">Javacord server<ExternalLinkIcon/></a></strong></li>\n</ul>\n","path":"/wiki/","keywords":[]},{"title":"Creating a Bot Account","headers":[{"level":2,"title":"üí° Create a bot and get its token","slug":"create-a-bot-and-get-its-token","children":[]},{"level":2,"title":"‚ûï How to add a bot to your server","slug":"how-to-add-a-bot-to-your-server","children":[{"level":3,"title":"Use Javacord to create the invite link","slug":"use-javacord-to-create-the-invite-link","children":[]},{"level":3,"title":"Create the invite link manually","slug":"create-the-invite-link-manually","children":[]}]},{"level":2,"title":"üôã‚Äç‚ôÇÔ∏è Use the invite link","slug":"use-the-invite-link","children":[]}],"content":"<h1 id=\"creating-a-bot-account\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#creating-a-bot-account\" aria-hidden=\"true\">#</a> Creating a Bot Account</h1>\n<p>After you added Javacord as a dependency with your favorite build manager, you should now create a bot account on the Discord website.\nThis article will guide you through the process.</p>\n<h2 id=\"create-a-bot-and-get-its-token\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-a-bot-and-get-its-token\" aria-hidden=\"true\">#</a> üí° Create a bot and get its token</h2>\n<h4 id=\"_1-open-https-discord-com-developers-applications-me-and-click-on-create-an-application\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-open-https-discord-com-developers-applications-me-and-click-on-create-an-application\" aria-hidden=\"true\">#</a> <strong>1.</strong> Open <a href=\"https://discordapp.com/developers/applications/me\" target=\"_blank\" rel=\"noopener noreferrer\">https://discord.com/developers/applications/me<ExternalLinkIcon/></a> and click on &quot;Create an application&quot;.</h4>\n<p><img src=\"@source/wiki/getting-started/create-application.png\" alt=\"\"></p>\n<h4 id=\"_2-switch-to-bot\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-switch-to-bot\" aria-hidden=\"true\">#</a> <strong>2.</strong> Switch to <code v-pre>Bot</code></h4>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p>If you want to, you can rename your application first</p>\n</div>\n<p><img src=\"@source/wiki/getting-started/click-bot.png\" alt=\"\"></p>\n<h4 id=\"_3-click-on-add-bot-and-confirm-the-popup\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-click-on-add-bot-and-confirm-the-popup\" aria-hidden=\"true\">#</a> <strong>3.</strong> Click on <code v-pre>Add bot</code> and confirm the popup</h4>\n<p><img src=\"@source/wiki/getting-started/add-bot.png\" alt=\"\">\n<img src=\"@source/wiki/getting-started/confirm.png\" alt=\"\"></p>\n<h4 id=\"_4-copy-the-bot-s-token-in-this-case-the-token-would-be-ndc-pcs-you-can-just-click-on-copy\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-copy-the-bot-s-token-in-this-case-the-token-would-be-ndc-pcs-you-can-just-click-on-copy\" aria-hidden=\"true\">#</a> <strong>4.</strong> Copy the bot's token. In this case the token would be <code v-pre>NDc[...]pCs</code>. You can just click on <code v-pre>Copy</code>.</h4>\n<div class=\"custom-container danger\"><p class=\"custom-container-title\">DANGER</p>\n<p>This token is used to login your bot. Keep it secret!</p>\n</div>\n<p><img src=\"@source/wiki/getting-started/copy-token.png\" alt=\"\"></p>\n<h4 id=\"_5-if-you-want-to-you-can-change-the-bot-s-name-and-avatar-on-this-page-too\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-if-you-want-to-you-can-change-the-bot-s-name-and-avatar-on-this-page-too\" aria-hidden=\"true\">#</a> <strong>5.</strong> If you want to, you can change the bot's name and avatar on this page, too.</h4>\n<h2 id=\"how-to-add-a-bot-to-your-server\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-add-a-bot-to-your-server\" aria-hidden=\"true\">#</a> ‚ûï How to add a bot to your server</h2>\n<p>Bots cannot join a server on their own like normal Discord users can.\nInstead, the owner of a server has to invite the bot using a so called <code v-pre>Invite Link</code>.\nThere are multiple ways to create the invite link:</p>\n<h3 id=\"use-javacord-to-create-the-invite-link\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#use-javacord-to-create-the-invite-link\" aria-hidden=\"true\">#</a> Use Javacord to create the invite link</h3>\n<p>The easiest way to obtain an invite link for your bot is by letting Javacord do it for you.\nSimply execute the following code, and it will print the invite link to your console:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"your token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">createBotInvite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>If you don't have Javacord setup yet, you can also create the invite link manually.</p>\n<h3 id=\"create-the-invite-link-manually\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-the-invite-link-manually\" aria-hidden=\"true\">#</a> Create the invite link manually</h3>\n<h4 id=\"get-the-client-id\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#get-the-client-id\" aria-hidden=\"true\">#</a> Get the client id</h4>\n<p>In order to add a bot to your server you need its client id.</p>\n<p>You can get your client id from the <a href=\"https://discord.com/developers/applications/me\" target=\"_blank\" rel=\"noopener noreferrer\">same page<ExternalLinkIcon/></a> where you created it.</p>\n<p><img src=\"@source/wiki/getting-started/get-client-id.png\" alt=\"\"></p>\n<p>With this id you can create an invite link for your bot.</p>\n<p>If you are the owner or admin of the server, you can use this link to add your bot to your server. Otherwise, you have to give the link to the server owner/admins and ask them to add your bot.</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p>Unlike the token, you don't have to keep your client id secret</p>\n</div>\n<h4 id=\"create-the-url\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#create-the-url\" aria-hidden=\"true\">#</a> Create the url</h4>\n<p>Just use the following link and replace <code v-pre>123456789</code> with your own client id.</p>\n<p><strong>https://discord.com/api/oauth2/authorize?client_id=123456789&amp;scope=applications.commands%20bot&amp;permissions=0</strong></p>\n<p>You can calculate the permissions (in the link above it's the <code v-pre>0</code>) on the page where you created the bot:</p>\n<p><img src=\"@source/wiki/getting-started/calculate-permissions.png\" alt=\"\"></p>\n<h2 id=\"use-the-invite-link\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#use-the-invite-link\" aria-hidden=\"true\">#</a> üôã‚Äç‚ôÇÔ∏è Use the invite link</h2>\n<p>You can now open the link and add the bot to your server:</p>\n<p><img src=\"@source/wiki/getting-started/use-invite-link.png\" alt=\"\"></p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">TIP</p>\n<p>Only the owner and admins of a server can invite bots. If you do not own a server yet, it is recommended to create one for testing.</p>\n</div>\n","path":"/wiki/getting-started/creating-a-bot-account.html","keywords":["bot creation","get token","add bot","bot invite link"]},{"title":"Download / Installation","headers":[{"level":2,"title":"üì¶ Javacord Dependency","slug":"javacord-dependency","children":[]},{"level":2,"title":"üìù Optional Logger Dependency","slug":"optional-logger-dependency","children":[]}],"content":"<h1 id=\"download-installation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#download-installation\" aria-hidden=\"true\">#</a> Download / Installation</h1>\n<ClientOnly>\n    <LatestVersion/>\n</ClientOnly>\n<p>The recommended way to get Javacord is to use a build manager, like Gradle or Maven.<br>\nIf you are not familiar with build managers, you can follow one of the beginner ide setup guides (see navigation) or\ndownload Javacord directly from <a href=\"https://github.com/Javacord/Javacord/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub<ExternalLinkIcon/></a>.</p>\n<h2 id=\"javacord-dependency\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javacord-dependency\" aria-hidden=\"true\">#</a> üì¶ Javacord Dependency</h2>\n<CodeGroup>\n  <CodeGroupItem title=\"Gradle\" active>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>repositories <span class=\"token punctuation\">{</span> <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\ndependencies <span class=\"token punctuation\">{</span> implementation <span class=\"token string\">'org.javacord:javacord:$latest-version'</span> <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"Maven\">\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$latest-version<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"Sbt\">\n<div class=\"language-scala ext-scala line-numbers-mode\"><pre v-pre class=\"language-scala\"><code>libraryDependencies <span class=\"token operator\">++</span><span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span><span class=\"token string\">\"org.javacord\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"javacord\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"$latest-version\"</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n</CodeGroup>\n<details class=\"custom-container details\"><summary>Click to view snapshot repositories</summary>\n<p>Snapshots are automatically deployed from the <a href=\"https://github.com/Javacord/Javacord/tree/development\" target=\"_blank\" rel=\"noopener noreferrer\">development<ExternalLinkIcon/></a>\nbranch.</p>\n<CodeGroup>\n  <CodeGroupItem title=\"Gradle\" active>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>repositories <span class=\"token punctuation\">{</span>\n    maven <span class=\"token punctuation\">{</span>\n        url <span class=\"token interpolation-string\"><span class=\"token string\">\"https://oss.sonatype.org/content/repositories/snapshots/\"</span></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ndependencies <span class=\"token punctuation\">{</span>\n    implementation <span class=\"token string\">'org.javacord:javacord:$latest-snapshot-version'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"Maven\">\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>snapshots-repo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://oss.sonatype.org/content/repositories/snapshots/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repository</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$latest-snapshot-version<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"Sbt\">\n<div class=\"language-scala ext-scala line-numbers-mode\"><pre v-pre class=\"language-scala\"><code>resolvers <span class=\"token operator\">+=</span> <span class=\"token string\">\"snapshots-repo\"</span> at <span class=\"token string\">\"https://oss.sonatype.org/content/repositories/snapshots/\"</span>\nlibraryDependencies <span class=\"token operator\">++</span><span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span><span class=\"token string\">\"org.javacord\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"javacord\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"$latest-snapshot-version\"</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n</CodeGroup>\n</details>\n<h2 id=\"optional-logger-dependency\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#optional-logger-dependency\" aria-hidden=\"true\">#</a> üìù Optional Logger Dependency</h2>\n<p>In addition to Javacord, it is also recommended to install a Log4j-2-compatible logging framework.\nA logging framework can be used to provide a more sophisticated logging experience with being able to configure log\nformat, log targets (console, file, database, Discord direct message, ...), log levels per class, and much more.</p>\n<p>For example, Log4j Core:</p>\n<CodeGroup>\n  <CodeGroupItem title=\"Gradle\" active>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>dependencies <span class=\"token punctuation\">{</span> runtimeOnly <span class=\"token string\">'org.apache.logging.log4j:log4j-core:2.17.0'</span> <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"Maven\">\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.logging.log4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>log4j-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.17.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n  <CodeGroupItem title=\"Sbt\">\n<div class=\"language-scala ext-scala line-numbers-mode\"><pre v-pre class=\"language-scala\"><code>libraryDependencies <span class=\"token operator\">++</span><span class=\"token operator\">=</span> Seq<span class=\"token punctuation\">(</span><span class=\"token string\">\"org.apache.logging.log4j\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"log4j-core\"</span> <span class=\"token operator\">%</span> <span class=\"token string\">\"2.17.0\"</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>  </CodeGroupItem>\n</CodeGroup>\n<p>Take a look at the <RouterLink to=\"/wiki/basic-tutorials/logger-config/\">logger configuration</RouterLink> wiki article for further information.</p>\n","path":"/wiki/getting-started/download-installation.html","keywords":["download and installation","maven","gradle"]},{"title":"Frequently Asked Questions","headers":[{"level":2,"title":"Q: Why do I receive empty (no content) messages in i.e. the MessageCreateListener?","slug":"q-why-do-i-receive-empty-no-content-messages-in-i-e-the-messagecreatelistener","children":[]},{"level":2,"title":"Q: What is ... in the code examples?","slug":"q-what-is-in-the-code-examples","children":[]},{"level":2,"title":"Q: Why is my code not working?","slug":"q-why-is-my-code-not-working","children":[{"level":3,"title":"How to properly ask a question to get fast support?","slug":"how-to-properly-ask-a-question-to-get-fast-support","children":[]}]},{"level":2,"title":"Q: What differs Javacord from JDA and D4J?","slug":"q-what-differs-javacord-from-jda-and-d4j","children":[]}],"content":"<h1 id=\"frequently-asked-questions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#frequently-asked-questions\" aria-hidden=\"true\">#</a> Frequently Asked Questions</h1>\n<p>Here you will find answers to some of the most asked questions.</p>\n<h2 id=\"q-why-do-i-receive-empty-no-content-messages-in-i-e-the-messagecreatelistener\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#q-why-do-i-receive-empty-no-content-messages-in-i-e-the-messagecreatelistener\" aria-hidden=\"true\">#</a> Q: Why do I receive empty (no content) messages in i.e. the MessageCreateListener?</h2>\n<p>You are missing the privileged <code v-pre>MESSAGE_CONTENT</code> intent. For more information of how to enable privileged intents and enable them in your code see <RouterLink to=\"/wiki/basic-tutorials/gateway-intents.html\">Gateway Intents</RouterLink>.</p>\n<h2 id=\"q-what-is-in-the-code-examples\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#q-what-is-in-the-code-examples\" aria-hidden=\"true\">#</a> Q: What is <code v-pre>...</code> in the code examples?</h2>\n<p>You have to replace the <code v-pre>...</code> with an instance that can be assigned to the datatype seen left.</p>\n<p>For example, if you see <code v-pre>TextChannel channel = ...</code>, you have to replace <code v-pre>...</code> with an instance that is a TextChannel which you can get from the API <code v-pre>api.getTextChannelById(CHANNEL_ID)</code> (note this returns an <a href=\"../essential-knowledge/optionals\">Optional</a>&lt;TextChannel&gt;) or from an event like <code v-pre>messageCreateEvent.getChannel()</code>.</p>\n<h2 id=\"q-why-is-my-code-not-working\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#q-why-is-my-code-not-working\" aria-hidden=\"true\">#</a> Q: Why is my code not working?</h2>\n<p>There are multiple reasons why your code might not work. The most common ones are:</p>\n<ol>\n<li>Your code is not being reached. So make sure your code actually gets executed with a print statement or a debugger.</li>\n<li>Add at least <RouterLink to=\"/wiki/essential-knowledge/completable-futures.html#exceptionally\"><code v-pre>.exceptionally(ExceptionLogger.get())</code></RouterLink> to every <a href=\"../essential-knowledge/completable-futures\">CompletableFuture</a> (like when sending a message) to show any exceptions that might come from Discord.</li>\n<li>Methods like <code v-pre>User#getRoles(Server)</code> do not return the roles of the user. To fix this make sure to add the <code v-pre>GUILD_MEMBERS</code> <a href=\"../basic-tutorials/gateway-intents\">intent</a>.</li>\n<li>You are getting a <code v-pre>NoSuchElementException</code>. Congratulations, you have killed a kitten! You are most likely getting this Exception because you handle <a href=\"../essential-knowledge/optionals\">Optionals</a> wrong. Read the article on <a href=\"../essential-knowledge/optionals\">Optionals</a> to learn how to use them correctly.</li>\n</ol>\n<p>If none of these tips will help you, you can ask your question in our <a href=\"https://discord.gg/javacord\" target=\"_blank\" rel=\"noopener noreferrer\">Discord Server<ExternalLinkIcon/></a>.</p>\n<h3 id=\"how-to-properly-ask-a-question-to-get-fast-support\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-properly-ask-a-question-to-get-fast-support\" aria-hidden=\"true\">#</a> How to properly ask a question to get fast support?</h3>\n<p>Don't ask:</p>\n<div class=\"language-text ext-text\"><pre v-pre class=\"language-text\"><code>Why is my code not working?\n//Code\n</code></pre></div><div class=\"language-text ext-text\"><pre v-pre class=\"language-text\"><code>Why am I getting Exception X?\n</code></pre></div><p>To ensure all information is provided that is needed to solve your issue, you should ask your question in a format like:</p>\n<div class=\"language-text ext-text\"><pre v-pre class=\"language-text\"><code>I have an issue with:   YOUR_ISSUE\nI want to do:           WHAT_YOU_WANT_TO_DO\nCurrently this happens: WHAT_HAPPENS_NOW\n\n//Code\n\n//Exception\nThe exception is thrown in the following line(not the number): CODE_LINE\n</code></pre></div><h2 id=\"q-what-differs-javacord-from-jda-and-d4j\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#q-what-differs-javacord-from-jda-and-d4j\" aria-hidden=\"true\">#</a> Q: What differs Javacord from JDA and D4J?</h2>\n<p>While all 3 libraries are Wrappers for the programming language Java, they use different techniques and concepts for their API.</p>\n<ul>\n<li><strong>Javacord</strong>: Uses Java classes for its API like <a href=\"../essential-knowledge/completable-futures\">CompletableFuture</a> for async requests and <a href=\"../essential-knowledge/optionals\">Optional</a> for return types which may be <code v-pre>null</code>.\n<ul>\n<li>Sending a Message: <code v-pre>channel.sendMessage(&quot;Javacord&quot;)</code></li>\n<li>Checking if the Author of a message is a user: <code v-pre>message.getMessageAuthor().asUser().isPresent()</code></li>\n</ul>\n</li>\n<li><strong>JDA</strong>: Has its own wrapper to execute requests and returns <code v-pre>null</code> if values are not present.\n<ul>\n<li>Sending a Message: <code v-pre>channel.sendMessage(&quot;JDA&quot;).queue()</code></li>\n<li>Checking if the Author of a message is a user: <code v-pre>message.getMember() != null</code></li>\n</ul>\n</li>\n<li><strong>Discord4J</strong>: Takes on the <code v-pre>reactive</code> approach.\n<ul>\n<li>Sending a Message: <code v-pre>channel.createMessage(&quot;Pong!&quot;).block();</code></li>\n</ul>\n</li>\n</ul>\n","path":"/wiki/getting-started/faq.html","keywords":["faq","...","deploy","code not working","ask a question","library difference"]},{"title":"Writing your first bot","headers":[{"level":2,"title":"‚ùó Enabling required intents","slug":"enabling-required-intents","children":[]},{"level":2,"title":"üîë Log the bot in","slug":"log-the-bot-in","children":[]},{"level":2,"title":"üëÇ Adding a listener","slug":"adding-a-listener","children":[]},{"level":2,"title":"üë©‚Äçüîß Putting it all together","slug":"putting-it-all-together","children":[]}],"content":"<h1 id=\"writing-your-first-bot\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#writing-your-first-bot\" aria-hidden=\"true\">#</a> Writing your first bot</h1>\n<p>After you have successfully added Javacord as a dependency, created a bot user, and got its token, you are now ready to create your first simple bot! üéâ</p>\n<h2 id=\"enabling-required-intents\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#enabling-required-intents\" aria-hidden=\"true\">#</a> ‚ùó Enabling required intents</h2>\n<p>By default, all non-privileged intents are enabled. To receive the message content, attachments, components, and embeds you need a special privileged intent <code v-pre>MESSAGE_CONTENT</code>.\nTo enable this privileged intent please see the <RouterLink to=\"/wiki/basic-tutorials/gateway-intents.html#privileged-intents\">Gateway Intents</RouterLink> wiki article.</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">Slash Commands</p>\n<p>Generally it is recommended to use <RouterLink to=\"/wiki/basic-tutorials/interactions/commands.html\">Slash Commands</RouterLink> instead of text commands because they offer many advantages\nlike auto-completion, fixed and optional arguments, different kind of arguments with built-in types: numbers(with ranges), text, channel and a lot more.</p>\n</div>\n<h2 id=\"log-the-bot-in\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#log-the-bot-in\" aria-hidden=\"true\">#</a> üîë Log the bot in</h2>\n<p>Everything starts with the <code v-pre>DiscordApiBuilder</code> class.\nIt is used to create a <code v-pre>DiscordApi</code> object which is the most important class of your bot.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;your super secret token>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">addIntents</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>MESSAGE_CONTENT<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>After executing this code, you should already see your bot online in Discord.\nOf course, just being online is not enough, so let's add some more code!</p>\n<h2 id=\"adding-a-listener\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#adding-a-listener\" aria-hidden=\"true\">#</a> üëÇ Adding a listener</h2>\n<p>After you got your <code v-pre>api</code> instance, let's continue by adding a listener that answers every <code v-pre>!ping</code> message with a simple <code v-pre>Pong!</code>.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><img src=\"@source/wiki/getting-started/ping-pong-white.gif\" alt=\"\"></p>\n<h2 id=\"putting-it-all-together\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#putting-it-all-together\" aria-hidden=\"true\">#</a> üë©‚Äçüîß Putting it all together</h2>\n<p>A good place for your code is the <code v-pre>main(...)</code> method that every executable Java program must have.\nYour complete class may look like this:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyFirstBot</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Log the bot in</span>\n        <span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;your super secret token>\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">addIntents</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span>MESSAGE_CONTENT<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Add a listener which answers with \"Pong!\" if someone writes \"!ping\"</span>\n        api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Congratulations, that's already everything you have to know for the beginning.\nNow, you can play around a little bit by exploring other listeners and methods.\nOr you just continue reading articles in the <em>Basic Tutorials</em> category.</p>\n","path":"/wiki/getting-started/writing-your-first-bot.html","keywords":[]},{"title":"Interaction Commands aka. Slash Commands","headers":[{"level":2,"title":"üí° Creating a Command","slug":"creating-a-command","children":[{"level":3,"title":"üìî Notes on creating commands:","slug":"notes-on-creating-commands","children":[]}]},{"level":2,"title":"‚§µÔ∏è Get your commands","slug":"get-your-commands","children":[]},{"level":2,"title":"üî® Updating Commands","slug":"updating-commands","children":[]},{"level":2,"title":"‚úçÔ∏è Bulk overwriting commands","slug":"bulk-overwriting-commands","children":[]},{"level":2,"title":"üëÆ‚Äç‚ôÇÔ∏è Permissions","slug":"permissions","children":[]},{"level":2,"title":"‚ùó Limits","slug":"limits","children":[{"level":3,"title":"Registering a command","slug":"registering-a-command","children":[]},{"level":3,"title":"General","slug":"general","children":[]}]}],"content":"<h1 id=\"interaction-commands-aka-slash-commands\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#interaction-commands-aka-slash-commands\" aria-hidden=\"true\">#</a> Interaction Commands aka. Slash Commands</h1>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">INFO</p>\n<p>There are a lot of convenient methods which aim to make your life easier with i.e., not\nbeing able to have an invalid configuration of your builder.\nTherefore, the following examples will only show the usage with the <strong>convenient methods</strong>.</p>\n</div>\n<h2 id=\"creating-a-command\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#creating-a-command\" aria-hidden=\"true\">#</a> üí° Creating a Command</h2>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">INFO</p>\n<p>There are 2 different types of Commands:</p>\n<ul>\n<li>Global | Available for every Server once your Bot gets invited: Created with <code v-pre>createGlobal(DiscordApi)</code>.</li>\n<li>Server | Only available on the specific Server: Created with <code v-pre>createForServer(Server)</code>.</li>\n</ul>\n</div>\n<p>Let's get started with the most basic command, a <strong>ping</strong> command.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">SlashCommand</span> command <span class=\"token operator\">=</span> <span class=\"token class-name\">SlashCommand</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Checks the functionality of this command\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">createGlobal</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>That's all you have to do!</p>\n<p>Let's have a look at a more complex command which involves nearly all possibilities:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">SlashCommand</span> command <span class=\"token operator\">=</span>\n        <span class=\"token class-name\">SlashCommand</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"channel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A command dedicated to channels\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">SlashCommandOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWithOptions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlashCommandOptionType</span><span class=\"token punctuation\">.</span>SUB_COMMAND_GROUP<span class=\"token punctuation\">,</span> <span class=\"token string\">\"edit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Edits a channel\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token class-name\">SlashCommandOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWithOptions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlashCommandOptionType</span><span class=\"token punctuation\">.</span>SUB_COMMAND<span class=\"token punctuation\">,</span> <span class=\"token string\">\"allow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Allows a permission to a user for a channel\"</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>\n                                <span class=\"token class-name\">SlashCommandOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlashCommandOptionType</span><span class=\"token punctuation\">.</span>CHANNEL<span class=\"token punctuation\">,</span> <span class=\"token string\">\"channel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"The channel to modify\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">SlashCommandOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlashCommandOptionType</span><span class=\"token punctuation\">.</span>USER<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"The user which permissions should be changed\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">SlashCommandOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWithChoices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SlashCommandOptionType</span><span class=\"token punctuation\">.</span>DECIMAL<span class=\"token punctuation\">,</span> <span class=\"token string\">\"permission\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"The permission to allow\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>\n                                        <span class=\"token class-name\">SlashCommandOptionChoice</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"manage\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                        <span class=\"token class-name\">SlashCommandOptionChoice</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"show\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">createGlobal</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Let that sink in first!</p>\n<p>What are we doing here?</p>\n<ol>\n<li>We create a base command called <code v-pre>channel</code>.</li>\n<li>It has a SUB_COMMAND_GROUP called <code v-pre>edit</code> which basically is just a folder where you can put your commands in.</li>\n<li>There's a SUB_COMMAND called <code v-pre>allow</code> which is our actual command. Therefore, our complete argument looks like <code v-pre>channel edit allow</code>.</li>\n<li>The SUB_COMMAND has 3 arguments:\n<ol>\n<li>The channel which should be edited.</li>\n<li>The user which permissions should be changed.</li>\n<li>A predefined list of available permissions the command executor can choose of.</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://i.imgur.com/Qb9lgqb.png\" alt=\"\"></p>\n<h3 id=\"notes-on-creating-commands\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#notes-on-creating-commands\" aria-hidden=\"true\">#</a> üìî Notes on creating commands:</h3>\n<h4 id=\"the-required-attribute\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#the-required-attribute\" aria-hidden=\"true\">#</a> The <code v-pre>REQUIRED</code> attribute</h4>\n<p>You can only mark the <strong>last</strong> argument as being <strong>not required</strong>. This means it can be optionally set by the command executor.\nIn the above example you could i.e. set the <code v-pre>PERMISSIONS</code> argument to <code v-pre>false</code>.</p>\n<h4 id=\"command-structure\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#command-structure\" aria-hidden=\"true\">#</a> Command structure</h4>\n<p>Your command has to follow these structures in order to be successfully created:</p>\n<details class=\"custom-container details\"><summary>Command structure</summary>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>VALID\n\ncommand\n|\n|__ subcommand\n|\n|__ subcommand\n\n----\n\ncommand\n|\n|__ subcommand-group\n    |\n    |__ subcommand\n|\n|__ subcommand-group\n    |\n    |__ subcommand\n\n----\n\nVALID\n\ncommand\n|\n|__ subcommand-group\n    |\n    |__ subcommand\n|\n|__ subcommand\n\n-------\n\nINVALID\n\n\ncommand\n|\n|__ subcommand-group\n    |\n    |__ subcommand-group\n|\n|__ subcommand-group\n    |\n    |__ subcommand-group\n\n----\n\nINVALID\n\ncommand\n|\n|__ subcommand\n    |\n    |__ subcommand-group\n|\n|__ subcommand\n    |\n    |__ subcommand-group\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></details>\n<h2 id=\"get-your-commands\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#get-your-commands\" aria-hidden=\"true\">#</a> ‚§µÔ∏è Get your commands</h2>\n<p>All global commands:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SlashCommand</span><span class=\"token punctuation\">></span></span> commands <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalSlashCommands</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>All commands only available on a single server:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Server</span> server <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SlashCommand</span><span class=\"token punctuation\">></span></span> commands <span class=\"token operator\">=</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">getServerSlashCommands</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>Getting all commands from a server only contains the commands you have created on this specific server.\nTherefore, the returned list does not include any global command!</p>\n</div>\n<h2 id=\"updating-commands\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#updating-commands\" aria-hidden=\"true\">#</a> üî® Updating Commands</h2>\n<p>When updating your commands you only have to include what you actually want to change.\nThe following updater will change the previous created command and change its base name from <code v-pre>channel</code> to <code v-pre>channels</code>.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">SlashCommand</span> updatedCommand <span class=\"token operator\">=</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">SlashCommandUpdater</span><span class=\"token punctuation\">(</span>commandId<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"channels\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">updateGlobal</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"bulk-overwriting-commands\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#bulk-overwriting-commands\" aria-hidden=\"true\">#</a> ‚úçÔ∏è Bulk overwriting commands</h2>\n<p>If you have to update / create multiple commands at once it advised to use the batch updater to only have to do 1 request.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SlashCommandBuilder</span><span class=\"token punctuation\">></span></span> builders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbuilders<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SlashCommandBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDescription</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A command for the server\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbuilders<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SlashCommandBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"permission\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDescription</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A command for permissions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                \napi<span class=\"token punctuation\">.</span><span class=\"token function\">bulkOverwriteGlobalApplicationCommands</span><span class=\"token punctuation\">(</span>builders<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"permissions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#permissions\" aria-hidden=\"true\">#</a> üëÆ‚Äç‚ôÇÔ∏è Permissions</h2>\n<p>Permissions exist to enable / disable the usage of your commands for certain things. These things may be:</p>\n<ul>\n<li>Permissions</li>\n<li>DMs</li>\n</ul>\n<p>When you create a command you can specify which permissions are required to use it.\nIn addition to the required permissions, you can also specify whether the command should be available in DMs.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">SlashCommand</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Ping!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultEnabledForPermissions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PermissionType</span><span class=\"token punctuation\">.</span>ADMINISTRATOR<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PermissionType</span><span class=\"token punctuation\">.</span>BAN_MEMBERS<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//.setDefaultDisabled() Effectively the same as setDefaultEnabledForPermissions(PermissionType.ADMINISTRATOR) but this will lead to the default type by Discord.</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setEnabledInDms</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">createGlobal</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container tip\"><p class=\"custom-container-title\">INFO</p>\n<p>Once your bot has been invited to a server, you can not change the permissions afterwards on this server.\nThen it's up to the server administrators / owner to correctly set up the commands for users / roles / channels.</p>\n</div>\n<h2 id=\"limits\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#limits\" aria-hidden=\"true\">#</a> ‚ùó Limits</h2>\n<h3 id=\"registering-a-command\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#registering-a-command\" aria-hidden=\"true\">#</a> Registering a command</h3>\n<ul>\n<li>Server commands are specific to the server you specify when making them. Server commands are not available in DMs. Command names are unique per application within each scope (global and server). That means:</li>\n<li>Your app cannot have two global commands with the same name</li>\n<li>Your app cannot have two server commands within the same name on the same guild</li>\n<li>Your app can have a global and guild command with the same name</li>\n<li>Multiple apps can have commands with the same names</li>\n</ul>\n<h3 id=\"general\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#general\" aria-hidden=\"true\">#</a> General</h3>\n<ul>\n<li>An app can have up to 100 top-level global commands with unique names</li>\n<li>An app can have up to an additional 100 server commands per server</li>\n<li>An app can have up to 25 subcommand groups on a top-level command</li>\n<li>An app can have up to 25 subcommands within a subcommand group</li>\n<li>Commands can have up to 25 options</li>\n<li>Options can have up to 25 choices</li>\n<li>Maximum of 4000 characters for combined name, description, and value properties for each command and its subcommands and groups</li>\n<li>Limitations on nesting subcommands and groups</li>\n<li>Global rate limit of 200 slash command creates per day per server</li>\n</ul>\n","path":"/wiki/basic-tutorials/interactions/commands.html","keywords":["interaction","slash command"]},{"title":"Message Components","headers":[{"level":2,"title":"‚ùî What are components?","slug":"what-are-components","children":[]},{"level":2,"title":"üí° Sending a message with a component","slug":"sending-a-message-with-a-component","children":[]}],"content":"<h1 id=\"message-components\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#message-components\" aria-hidden=\"true\">#</a> Message Components</h1>\n<h2 id=\"what-are-components\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#what-are-components\" aria-hidden=\"true\">#</a> ‚ùî What are components?</h2>\n<p>Components are interactive elements like buttons or hidden elements like the ActionRow which use is for displaying the visible components. You can add them to a message and interact with users in a very convenient way.\nCurrently, the only interactive components available at the moment are buttons. They differ in style and behaviour(link redirect) seen in the picture below:\n<img src=\"https://support.discord.com/hc/article_attachments/1500019725621/buttons.png\" alt=\"\"></p>\n<h2 id=\"sending-a-message-with-a-component\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#sending-a-message-with-a-component\" aria-hidden=\"true\">#</a> üí° Sending a message with a component</h2>\n<p>Sending a component with your message is a simple as that:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">TextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Click on one of these Buttons!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addComponents</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">ActionRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Button</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Send a message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">Button</span><span class=\"token punctuation\">.</span><span class=\"token function\">danger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"danger\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Delete this message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">Button</span><span class=\"token punctuation\">.</span><span class=\"token function\">secondary</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"secondary\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Remind me after 5 minutes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><img src=\"https://i.imgur.com/5tMCePH.png\" alt=\"\"></p>\n<p>You simply add a High Level component like an ActionRow which is a container for displaying your components.\nIn turn the ActionRow consist of the components you can interact with like Buttons.</p>\n<p>This works for Select Menus as well:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">TextChannel</span> channel <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Select an option of this list!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addComponents</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">ActionRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectMenu</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"options\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Click here to show the options\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectMenuOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Option One\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"You selected Option One!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Click here to select Option One\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">SelectMenuOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Option Two\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"You selected Option Two!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Click here to select Option Two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">SelectMenuOption</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Option Three\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"You selected Option Three!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Click here to select Option Three\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><img src=\"https://i.imgur.com/bhcGjCN.png\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/ZlviGPe.png\" alt=\"\"></p>\n","path":"/wiki/basic-tutorials/interactions/components.html","keywords":["interaction","component","button","actionrow","selectmenus"]},{"title":"Interactions","headers":[{"level":2,"title":"üí¨ Message Commands","slug":"message-commands","children":[]},{"level":2,"title":"‚úâÔ∏è Interaction Types","slug":"interaction-types","children":[]},{"level":2,"title":"‚ôªÔ∏è Lifecycle","slug":"lifecycle","children":[]},{"level":2,"title":"üìà Advantages","slug":"advantages","children":[]},{"level":2,"title":"ü§ñ Applications vs. Bots","slug":"applications-vs-bots","children":[]},{"level":2,"title":"üîç See also","slug":"see-also","children":[]}],"content":"<h1 id=\"interactions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#interactions\" aria-hidden=\"true\">#</a> Interactions</h1>\n<p>Interactions are a means of accepting user input through Discord. They have been introduced to provide a more standardized,\ncontrolled way for commands than parsing messages. They can even be used with applications that do not provide a bot user.</p>\n<h2 id=\"message-commands\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#message-commands\" aria-hidden=\"true\">#</a> üí¨ Message Commands</h2>\n<p>The &quot;old&quot; way of doing commands was done through parsed text messages, like <code v-pre>!ping</code>, <code v-pre>!userinfo James</code> or\n<code v-pre>!mute James 100s</code>. While such commands are easy in theory, they come with several problems, such as:</p>\n<ul>\n<li>Conflicts between Bots using the same command format / prefix.</li>\n<li>Bots have to be able to read all messages and find those that are directed at them</li>\n<li>Information about command structure can only be provided in info texts and error messages</li>\n</ul>\n<p><img src=\"@source/wiki/basic-tutorials/interactions/lifecycle_command.png\" alt=\"Message Command Lifecycle\"></p>\n<h2 id=\"interaction-types\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#interaction-types\" aria-hidden=\"true\">#</a> ‚úâÔ∏è Interaction Types</h2>\n<p>Interactions come in a variety of shapes. The most complex and versatile is the <RouterLink to=\"/wiki/basic-tutorials/interactions/commands.html\">command interaction</RouterLink>,\nwhich allows for commands directed at a particular bot with information and assistance on subcommands and parameters\nbeing integrated into the discord client.</p>\n<p><a href=\"https://javadoc.io/doc/org.javacord/javacord-api/latest/org/javacord/api/interaction/ContextMenu.html\" target=\"_blank\" rel=\"noopener noreferrer\">Context Menu commands<ExternalLinkIcon/></a>\nare available from the context menu in the client either on a message or a server member.</p>\n<p><RouterLink to=\"/wiki/basic-tutorials/interactions/components.html\">Message components</RouterLink> come in the flavor of buttons, select menus and other form elements and can be attached directly\nto a message.</p>\n<h2 id=\"lifecycle\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lifecycle\" aria-hidden=\"true\">#</a> ‚ôªÔ∏è Lifecycle</h2>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">INFO</p>\n<p>Creation of interactions is detailed on the pages linked in the previous section.</p>\n</div>\n<p>Unlike chat message commands, interactions and interaction commands need to be registered with Discord. In order for\na bot's interactions to be available in a server, the bot must be added to the server with the <code v-pre>applications.commands</code>\nOAUTH scope. The scope is included in links created by <code v-pre>DiscordApi#createInviteLink</code>. If your bot is older, it may need to\nbe invited with the new link to add the scope. It is not necessary to remove the bot from the server to do this.</p>\n<p><img src=\"@source/wiki/basic-tutorials/interactions/lifecycle_interaction.png\" alt=\"Interaction Command Lifecycle\"></p>\n<h2 id=\"advantages\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#advantages\" aria-hidden=\"true\">#</a> üìà Advantages</h2>\n<p>While being more complicated to utilize, interactions have many benefits over pure text commands.</p>\n<ul>\n<li>Better Validation: Commands can not be sent with parameters of the wrong type or missing required parameters</li>\n<li>No conflicts: Interactions are separated by bot and only sent to the proper bot</li>\n<li>&quot;Privacy&quot;: If no public response is sent by the bot, the exchange is invisible to other chat participants</li>\n<li>Integration: Interactions are integrated into the client's user interface</li>\n<li>Conversations: <RouterLink to=\"/wiki/basic-tutorials/interactions/components.html\">Message components</RouterLink> can be used in replies to interactions, allowing for nested dialogues.</li>\n</ul>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>If a bot replies to a slash command with a public message, the command used, including all parameters, is visible to\nother users.</p>\n</div>\n<h2 id=\"applications-vs-bots\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#applications-vs-bots\" aria-hidden=\"true\">#</a> ü§ñ Applications vs. Bots</h2>\n<p>Interactions can used by any application, not only bots. While interactions can also be handled through webhooks,\nJavacord only offers support for dealing with them through the gateway. See the\n<a href=\"https://discord.com/developers/docs/interactions/receiving-and-responding\" target=\"_blank\" rel=\"noopener noreferrer\">Discord Documentation<ExternalLinkIcon/></a> for more information.</p>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>The methods of handling interactions can not be mixed. If you register a webhook for your interaction commands, the bot\nwill no longer receive any interaction events.</p>\n</div>\n<h2 id=\"see-also\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#see-also\" aria-hidden=\"true\">#</a> üîç See also</h2>\n<ul>\n<li><a href=\"https://discord.com/developers/docs/interactions/application-commands\" target=\"_blank\" rel=\"noopener noreferrer\">Application Commands (Discord Documentation)<ExternalLinkIcon/></a></li>\n<li><a href=\"https://discord.com/developers/docs/interactions/message-components\" target=\"_blank\" rel=\"noopener noreferrer\">Message Components (Discord Documentation)<ExternalLinkIcon/></a></li>\n</ul>\n","path":"/wiki/basic-tutorials/interactions/overview.html","keywords":["interaction","slash command","command","context menu","autocomplete"]},{"title":"Responding to interactions","headers":[{"level":2,"title":"üí¨ Responding immediately after receiving an interaction.","slug":"responding-immediately-after-receiving-an-interaction","children":[]},{"level":2,"title":"üí¨ Responding after some time when receiving an interaction.","slug":"responding-after-some-time-when-receiving-an-interaction","children":[{"level":3,"title":"Sending followup messages","slug":"sending-followup-messages","children":[]}]},{"level":2,"title":"Responding with a Modal","slug":"responding-with-a-modal","children":[]},{"level":2,"title":"üí¨ SlashCommand interaction only response methods","slug":"slashcommand-interaction-only-response-methods","children":[{"level":3,"title":"How to know what slash command was invoked?","slug":"how-to-know-what-slash-command-was-invoked","children":[]},{"level":3,"title":"Respond to an AutoComplete interaction triggered from a SlashCommand","slug":"respond-to-an-autocomplete-interaction-triggered-from-a-slashcommand","children":[]}]},{"level":2,"title":"üí¨ Message Component interaction only response methods","slug":"message-component-interaction-only-response-methods","children":[{"level":3,"title":"A more complete example of how to respond to Component interactions","slug":"a-more-complete-example-of-how-to-respond-to-component-interactions","children":[]}]}],"content":"<h1 id=\"responding-to-interactions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#responding-to-interactions\" aria-hidden=\"true\">#</a> Responding to interactions</h1>\n<p>There are many ways to respond to interactions and some are only available for certain interactions.\nThe following will be usable for every interaction.</p>\n<h2 id=\"responding-immediately-after-receiving-an-interaction\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#responding-immediately-after-receiving-an-interaction\" aria-hidden=\"true\">#</a> üí¨ Responding immediately after receiving an interaction.</h2>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>event<span class=\"token punctuation\">.</span><span class=\"token function\">getInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">createImmediateResponder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YOUR_RESPONSE\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"custom-container tip\"><p class=\"custom-container-title\">INFO</p>\n<p>Note that you have to respond withing 3 seconds, or the command will fail. If you need longer than 3 seconds you have to\nrespond with <code v-pre>respondLater()</code> which allows you to respond within 15 minutes.</p>\n<p>Because of this time limitation, sending any files when creating an immediate response is not possible.\nIf you want a file to be embedded either use <code v-pre>respondLater</code> or include a web link in the message content.\nDepending on the media type of the link and the server configuration, Discord will then display an appropriate embed for the file.</p>\n</div>\n<p>When you want to respond ephemerally, you can use the <code v-pre>setFlags</code> method. Your new responder would look like the\nfollowing:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>event<span class=\"token punctuation\">.</span><span class=\"token function\">getInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">createImmediateResponder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YOUR_RESPONSE\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">setFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageFlag</span><span class=\"token punctuation\">.</span>EPHEMERAL<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"responding-after-some-time-when-receiving-an-interaction\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#responding-after-some-time-when-receiving-an-interaction\" aria-hidden=\"true\">#</a> üí¨ Responding after some time when receiving an interaction.</h2>\n<p>If your computations takes longer than the 3 seconds limit, you can respond later and the Discord Client will show that\nyour bot is thinking until you respond.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>event<span class=\"token punctuation\">.</span><span class=\"token function\">getInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">respondLater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>interactionOriginalResponseUpdater <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            interactionOriginalResponseUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Update message after some time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>You can respond ephemerally when responding later too. For that you have pass a <code v-pre>true</code> boolean to the <code v-pre>respondLater</code> method.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>event<span class=\"token punctuation\">.</span><span class=\"token function\">getInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">respondLater</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>interactionOriginalResponseUpdater <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            interactionOriginalResponseUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Update message after some time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"sending-followup-messages\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#sending-followup-messages\" aria-hidden=\"true\">#</a> Sending followup messages</h3>\n<p>Followup messages can be sent within 15 minutes after the command has been invoked. You can send as many followup\nmessages as you want.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addSlashCommandCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">SlashCommandInteraction</span> slashCommandInteraction <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getSlashCommandInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    slashCommandInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">respondLater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>interactionOriginalResponseUpdater <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        interactionOriginalResponseUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You will receive the answer in a few minutes!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// time &lt; 15 minutes</span>\n        \n        slashCommandInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">createFollowupMessageBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thank you for your patience, it took a while but the answer to the universe is 42\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"responding-with-a-modal\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#responding-with-a-modal\" aria-hidden=\"true\">#</a> Responding with a Modal</h2>\n<p>A modal is a popup dialog which can be shown when responding to an interaction. It focuses the users to explicitly fill out this form to continue with the workflow.\nCurrently, only the <code v-pre>TextInput</code> (<code v-pre>SelectMenu</code> has been seen working too, but is not yet officially supported) is supported.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageComponentCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">respondWithModal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"modalId\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Modal Title\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">ActionRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TextInput</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TextInputStyle</span><span class=\"token punctuation\">.</span>SHORT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text_input_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"This is a Text Input Field\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Which results in</p>\n<p><img src=\"@source/wiki/basic-tutorials/interactions/respond_with_modal.png\" alt=\"Modal\"></p>\n<h2 id=\"slashcommand-interaction-only-response-methods\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#slashcommand-interaction-only-response-methods\" aria-hidden=\"true\">#</a> üí¨ SlashCommand interaction only response methods</h2>\n<h3 id=\"how-to-know-what-slash-command-was-invoked\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#how-to-know-what-slash-command-was-invoked\" aria-hidden=\"true\">#</a> How to know what slash command was invoked?</h3>\n<p>For example, you have created a slash command with the name &quot;settings&quot; and a subcommand &quot;color&quot;. If you want to check if\nexactly this command has been used, you can check it as follows:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addSlashCommandCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">SlashCommandInteraction</span> interaction <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getSlashCommandInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>interaction<span class=\"token punctuation\">.</span><span class=\"token function\">getFullCommandName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"settings color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Code if command matches the full name</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"respond-to-an-autocomplete-interaction-triggered-from-a-slashcommand\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#respond-to-an-autocomplete-interaction-triggered-from-a-slashcommand\" aria-hidden=\"true\">#</a> Respond to an AutoComplete interaction triggered from a SlashCommand</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addAutocompleteCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getAutocompleteInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">respondWithChoices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">SlashCommandOptionChoice</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">SlashCommandOptionChoice</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"two\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"message-component-interaction-only-response-methods\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#message-component-interaction-only-response-methods\" aria-hidden=\"true\">#</a> üí¨ Message Component interaction only response methods</h2>\n<p>When dealing with message components, you don't necessarily have to respond or update a message.\nYou can simply acknowledge the interaction and let the user know that the task is done.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageComponentCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageComponentInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">acknowledge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"a-more-complete-example-of-how-to-respond-to-component-interactions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#a-more-complete-example-of-how-to-respond-to-component-interactions\" aria-hidden=\"true\">#</a> A more complete example of how to respond to Component interactions</h3>\n<p>The following code snipped shows how you can respond to the example created in <RouterLink to=\"/wiki/basic-tutorials/interactions/components.html\">Components</RouterLink>.</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageComponentCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">MessageComponentInteraction</span> messageComponentInteraction <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageComponentInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> customId <span class=\"token operator\">=</span> messageComponentInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">getCustomId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>customId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"success\"</span><span class=\"token operator\">:</span>\n            messageComponentInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">createImmediateResponder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You clicked a button!\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"danger\"</span><span class=\"token operator\">:</span>\n            messageComponentInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ifPresent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Message</span><span class=\"token operator\">::</span><span class=\"token function\">delete</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"secondary\"</span><span class=\"token operator\">:</span>\n            messageComponentInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">respondLater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenAccept</span><span class=\"token punctuation\">(</span>interactionOriginalResponseUpdater <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">//Code to respond after 5 minutes</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"options\"</span><span class=\"token operator\">:</span>\n            messageComponentInteraction<span class=\"token punctuation\">.</span><span class=\"token function\">createImmediateResponder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You selected an option in a select menu!\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">respond</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","path":"/wiki/basic-tutorials/interactions/responding.html","keywords":["interaction responding","modal","autocomplete"]},{"title":"Eclipse + Maven","headers":[{"level":2,"title":"üîß Setup","slug":"setup","children":[]},{"level":2,"title":"üèÉ‚Äç‚ôÄÔ∏è Run the code","slug":"run-the-code","children":[]}],"content":"<h1 id=\"eclipse-maven\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#eclipse-maven\" aria-hidden=\"true\">#</a> Eclipse + Maven</h1>\n<ClientOnly>\n    <LatestVersion/>\n</ClientOnly>\nThis tutorial provides a beginner-friendly click by click guide to set up Javacord with Eclipse and Maven.\nIf you are already familiar with Eclipse and Maven, you can just see the artifact locations at [Download / Installation](/wiki/getting-started/download-installation.md).\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">Info</p>\n<p>We recommend to use <RouterLink to=\"/wiki/getting-started/setup/intellij-gradle.html\">Intellij + Gradle</RouterLink> unless you already have experience with one of the other IDEs or build managers.</p>\n</div>\n<h2 id=\"setup\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setup\" aria-hidden=\"true\">#</a> üîß Setup</h2>\n<h4 id=\"_1-start-eclipse\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-start-eclipse\" aria-hidden=\"true\">#</a> <strong>1.</strong> Start Eclipse</h4>\n<h4 id=\"_2-create-a-new-project-file-new-project\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-create-a-new-project-file-new-project\" aria-hidden=\"true\">#</a> <strong>2.</strong> Create a new project (<code v-pre>File</code> -&gt; <code v-pre>New</code> -&gt; <code v-pre>Project</code>)</h4>\n<p><img src=\"https://i.imgur.com/hYeYxen.png\" alt=\"\"></p>\n<h4 id=\"_3-select-maven-project\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-select-maven-project\" aria-hidden=\"true\">#</a> <strong>3.</strong> Select <code v-pre>Maven Project</code></h4>\n<h4 id=\"_4-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-click-next\" aria-hidden=\"true\">#</a> <strong>4.</strong> Click <code v-pre>Next</code></h4>\n<p><img src=\"https://i.imgur.com/CeHy9HK.png\" alt=\"\"></p>\n<h4 id=\"_5-check-create-a-simple-project\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-check-create-a-simple-project\" aria-hidden=\"true\">#</a> <strong>5.</strong> Check <code v-pre>Create a simple project</code></h4>\n<h4 id=\"_6-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-click-next\" aria-hidden=\"true\">#</a> <strong>6.</strong> Click <code v-pre>Next</code></h4>\n<p><img src=\"https://i.imgur.com/xxbGmr6.png\" alt=\"\"></p>\n<h4 id=\"_7-enter-a-group-id-e-g-com-github-yourname\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_7-enter-a-group-id-e-g-com-github-yourname\" aria-hidden=\"true\">#</a> <strong>7.</strong> Enter a group id (e.g. <code v-pre>com.github.yourname</code>)</h4>\n<h4 id=\"_8-enter-an-artifact-id-e-g-myfirstbot\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-enter-an-artifact-id-e-g-myfirstbot\" aria-hidden=\"true\">#</a> <strong>8.</strong> Enter an artifact id (e.g. <code v-pre>myfirstbot</code>)</h4>\n<h4 id=\"_9-click-finish\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_9-click-finish\" aria-hidden=\"true\">#</a> <strong>9.</strong> Click <code v-pre>Finish</code></h4>\n<p><img src=\"https://i.imgur.com/JSV9yrl.png\" alt=\"\"></p>\n<h4 id=\"_10-double-click-on-the-pom-xml-file\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_10-double-click-on-the-pom-xml-file\" aria-hidden=\"true\">#</a> <strong>10.</strong> Double click on the <code v-pre>pom.xml</code> file</h4>\n<p><img src=\"https://i.imgur.com/NCAALIt.png\" alt=\"\"></p>\n<h4 id=\"_11-select-pom-xml\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_11-select-pom-xml\" aria-hidden=\"true\">#</a> <strong>11.</strong> Select <code v-pre>pom.xml</code></h4>\n<p><img src=\"https://i.imgur.com/kbdtiLJ.png\" alt=\"\"></p>\n<h4 id=\"_12-now-you-have-to-add-javacord-as-a-dependency-by-editing-the-pom-xml-file-your-file-should-now-look-like-this\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_12-now-you-have-to-add-javacord-as-a-dependency-by-editing-the-pom-xml-file-your-file-should-now-look-like-this\" aria-hidden=\"true\">#</a> <strong>12.</strong> Now you have to add Javacord as a dependency by editing the pom.xml file. Your file should now look like this:</h4>\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modelVersion</span><span class=\"token punctuation\">></span></span>4.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>modelVersion</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>your.package.name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>myfirstbot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0-SNAPSHOT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$latest-version<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4 id=\"_13-create-a-new-package-inside-the-src-main-java-folder\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_13-create-a-new-package-inside-the-src-main-java-folder\" aria-hidden=\"true\">#</a> <strong>13.</strong> Create a new package inside the <code v-pre>src/main/java</code> folder</h4>\n<p><img src=\"https://i.imgur.com/Z1QNuQf.png\" alt=\"\">\n<img src=\"https://i.imgur.com/RKJc0yU.png\" alt=\"\"></p>\n<h4 id=\"_14-create-a-new-class-inside-this-package\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_14-create-a-new-class-inside-this-package\" aria-hidden=\"true\">#</a> <strong>14.</strong> Create a new class inside this package</h4>\n<p><img src=\"https://i.imgur.com/eUmumlz.png\" alt=\"\">\n<img src=\"https://i.imgur.com/GsPFaag.png\" alt=\"\"></p>\n<h4 id=\"_15-save-the-project-you-should-do-this-from-time-to-time\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_15-save-the-project-you-should-do-this-from-time-to-time\" aria-hidden=\"true\">#</a> <strong>15.</strong>  Save the project (you should do this from time to time)</h4>\n<p><img src=\"https://i.imgur.com/Ht5UT8S.png\" alt=\"\"></p>\n<h4 id=\"_16-now-you-can-start-coding-example-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_16-now-you-can-start-coding-example-code\" aria-hidden=\"true\">#</a> <strong>16.</strong> Now you can start coding! Example code:</h4>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>yourname<span class=\"token punctuation\">.</span>myfirstbot</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DiscordApi</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DiscordApiBuilder</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Insert your bot's token here</span>\n        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token string\">\"your token\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Add a listener which answers with \"Pong!\" if someone writes \"!ping\"</span>\n        api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Print the invite url of your bot</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You can invite the bot by using the following url: \"</span> <span class=\"token operator\">+</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">createBotInvite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"run-the-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#run-the-code\" aria-hidden=\"true\">#</a> üèÉ‚Äç‚ôÄÔ∏è Run the code</h2>\n<p>You can run your code by clicking on the small green arrow\n<img src=\"https://i.imgur.com/rsIHH9M.png\" alt=\"\"></p>\n","path":"/wiki/getting-started/setup/eclipse-maven.html","keywords":[]},{"title":"IntelliJ + Gradle","headers":[{"level":2,"title":"üîß Setup","slug":"setup","children":[]},{"level":2,"title":"üèÉ‚Äç‚ôÄÔ∏è Run the code","slug":"run-the-code","children":[]}],"content":"<h1 id=\"intellij-gradle\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#intellij-gradle\" aria-hidden=\"true\">#</a> IntelliJ + Gradle</h1>\n<ClientOnly>\n    <LatestVersion/>\n</ClientOnly>\n<p>This tutorial provides a beginner-friendly click by click guide to set up Javacord with Intellij and Gradle.\nIf you are already familiar with IntelliJ and Gradle, you can just see the artifact locations at <RouterLink to=\"/wiki/getting-started/download-installation.html\">Download / Installation</RouterLink>.</p>\n<h2 id=\"setup\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setup\" aria-hidden=\"true\">#</a> üîß Setup</h2>\n<h4 id=\"_1-start-intellij\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-start-intellij\" aria-hidden=\"true\">#</a> <strong>1.</strong> Start IntelliJ</h4>\n<h4 id=\"_2-create-a-new-project-file-new-project\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-create-a-new-project-file-new-project\" aria-hidden=\"true\">#</a> <strong>2.</strong> Create a new project (<code v-pre>File</code> -&gt; <code v-pre>New</code> -&gt; <code v-pre>Project</code>)</h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/create-project.png\" alt=\"\"></p>\n<h4 id=\"_3-select-gradle\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-select-gradle\" aria-hidden=\"true\">#</a> <strong>3.</strong> Select <code v-pre>Gradle</code></h4>\n<h4 id=\"_4-make-sure-to-select-an-sdk-which-is-1-8-or-greater\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-make-sure-to-select-an-sdk-which-is-1-8-or-greater\" aria-hidden=\"true\">#</a> <strong>4.</strong> Make sure to select an SDK which is 1.8 (or greater)</h4>\n<h4 id=\"_5-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-click-next\" aria-hidden=\"true\">#</a> <strong>5.</strong> Click <code v-pre>Next</code></h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/select-gradle.png\" alt=\"\"></p>\n<h4 id=\"_6-enter-a-group-id-e-g-com-github-yourname\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-enter-a-group-id-e-g-com-github-yourname\" aria-hidden=\"true\">#</a> <strong>6.</strong> Enter a group id (e.g. <code v-pre>com.github.yourname</code>)</h4>\n<p>You can choose whatever you want</p>\n<h4 id=\"_7-enter-an-artifact-id-e-g-myfirstbot\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_7-enter-an-artifact-id-e-g-myfirstbot\" aria-hidden=\"true\">#</a> <strong>7.</strong> Enter an artifact id (e.g. <code v-pre>myfirstbot</code>)</h4>\n<p>You can choose whatever you want</p>\n<h4 id=\"_8-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-click-next\" aria-hidden=\"true\">#</a> <strong>8.</strong> Click <code v-pre>Next</code></h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-project.png\" alt=\"\"></p>\n<h4 id=\"_9-check-use-auto-import\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_9-check-use-auto-import\" aria-hidden=\"true\">#</a> <strong>9.</strong> Check <code v-pre>Use auto-import</code></h4>\n<h4 id=\"_10-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_10-click-next\" aria-hidden=\"true\">#</a> <strong>10.</strong> Click <code v-pre>Next</code></h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-project-2.png\" alt=\"\"></p>\n<h4 id=\"_11-click-finish\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_11-click-finish\" aria-hidden=\"true\">#</a> <strong>11.</strong> Click <code v-pre>Finish</code></h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-project-3.png\" alt=\"\"></p>\n<h4 id=\"_12-locate-the-build-gradle-file-and-open-it\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_12-locate-the-build-gradle-file-and-open-it\" aria-hidden=\"true\">#</a> <strong>12.</strong> Locate the <code v-pre>build.gradle</code> file and open it</h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/after-finished.png\" alt=\"\"></p>\n<h4 id=\"_12-add-the-javacord-dependency-your-build-gradle-file-should-now-look-like-this\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_12-add-the-javacord-dependency-your-build-gradle-file-should-now-look-like-this\" aria-hidden=\"true\">#</a> <strong>12.</strong> Add the Javacord dependency. Your <code v-pre>build.gradle</code> file should now look like this</h4>\n<div class=\"language-groovy ext-groovy line-numbers-mode\"><pre v-pre class=\"language-groovy\"><code>plugins <span class=\"token punctuation\">{</span>\n    id <span class=\"token string\">'java'</span>\n<span class=\"token punctuation\">}</span>\n\ngroup <span class=\"token string\">'com.github.yourname'</span>\nversion <span class=\"token string\">'1.0-SNAPSHOT'</span>\n\nsourceCompatibility <span class=\"token operator\">=</span> <span class=\"token number\">1.8</span>\n\nrepositories <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\ndependencies <span class=\"token punctuation\">{</span>\n    implementation <span class=\"token string\">'org.javacord:javacord:$latest-version'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4 id=\"_13-create-a-new-package-in-the-src-main-java-folder\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_13-create-a-new-package-in-the-src-main-java-folder\" aria-hidden=\"true\">#</a> <strong>13.</strong> Create a new package in the <code v-pre>src/main/java</code> folder</h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-package.png\" alt=\"\">\n<img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-package-2.png\" alt=\"\"></p>\n<h4 id=\"_14-create-a-new-class-inside-this-package\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_14-create-a-new-class-inside-this-package\" aria-hidden=\"true\">#</a> <strong>14.</strong> Create a new class inside this package</h4>\n<p><img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-class.png\" alt=\"\">\n<img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/new-class-2.png\" alt=\"\"></p>\n<h4 id=\"_15-you-can-now-start-coding\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_15-you-can-now-start-coding\" aria-hidden=\"true\">#</a> <strong>15.</strong> You can now start coding!</h4>\n<p>Example code:</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>yourname</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DiscordApi</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DiscordApiBuilder</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Insert your bot's token here</span>\n        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token string\">\"your token\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Add a listener which answers with \"Pong!\" if someone writes \"!ping\"</span>\n        api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Print the invite url of your bot</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You can invite the bot by using the following url: \"</span> <span class=\"token operator\">+</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">createBotInvite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"run-the-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#run-the-code\" aria-hidden=\"true\">#</a> üèÉ‚Äç‚ôÄÔ∏è Run the code</h2>\n<p>You can run your code by clicking on the small green arrow\n<img src=\"@source/wiki/getting-started/setup/img-intellij-gradle/run-the-bot.png\" alt=\"\"></p>\n","path":"/wiki/getting-started/setup/intellij-gradle.html","keywords":[]},{"title":"IntelliJ + Maven","headers":[{"level":2,"title":"üîß Setup","slug":"setup","children":[]},{"level":2,"title":"üèÉ‚Äç‚ôÄÔ∏è Run the code","slug":"run-the-code","children":[]},{"level":2,"title":"üöß Possible problems","slug":"possible-problems","children":[]}],"content":"<h1 id=\"intellij-maven\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#intellij-maven\" aria-hidden=\"true\">#</a> IntelliJ + Maven</h1>\n<ClientOnly>\n    <LatestVersion/>\n</ClientOnly>\n<p>This tutorial provides a beginner-friendly click by click guide to set up Javacord with Intellij and Maven.\nIf you are already familiar with IntelliJ and Maven, you can just see the artifact locations at <RouterLink to=\"/wiki/getting-started/download-installation.html\">Download / Installation</RouterLink>.</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">Info</p>\n<p>We recommend to use <RouterLink to=\"/wiki/getting-started/setup/intellij-gradle.html\">Intellij + Gradle</RouterLink> unless you already have experience with one of the other IDEs or build managers.</p>\n</div>\n<h2 id=\"setup\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setup\" aria-hidden=\"true\">#</a> üîß Setup</h2>\n<h4 id=\"_1-start-intellij\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-start-intellij\" aria-hidden=\"true\">#</a> <strong>1.</strong> Start IntelliJ</h4>\n<h4 id=\"_2-create-a-new-project-file-new-project\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-create-a-new-project-file-new-project\" aria-hidden=\"true\">#</a> <strong>2.</strong> Create a new project (<code v-pre>File</code> -&gt; <code v-pre>New</code> -&gt; <code v-pre>Project</code>)</h4>\n<p><img src=\"https://i.imgur.com/Twz9SlW.png\" alt=\"\"></p>\n<h4 id=\"_3-select-maven\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-select-maven\" aria-hidden=\"true\">#</a> <strong>3.</strong> Select <code v-pre>Maven</code></h4>\n<h4 id=\"_4-make-sure-to-select-an-sdk-which-is-1-8-or-greater\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-make-sure-to-select-an-sdk-which-is-1-8-or-greater\" aria-hidden=\"true\">#</a> <strong>4.</strong> Make sure to select an SDK which is 1.8 (or greater)</h4>\n<h4 id=\"_5-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-click-next\" aria-hidden=\"true\">#</a> <em>5.</em>* Click <code v-pre>Next</code></h4>\n<p><img src=\"https://i.imgur.com/OGDuITx.png\" alt=\"\"></p>\n<h4 id=\"_6-enter-a-group-id-e-g-com-github-yourname\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-enter-a-group-id-e-g-com-github-yourname\" aria-hidden=\"true\">#</a> <strong>6.</strong> Enter a group id (e.g. <code v-pre>com.github.yourname</code>)</h4>\n<h4 id=\"_7-enter-an-artifact-id-e-g-myfirstbot\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_7-enter-an-artifact-id-e-g-myfirstbot\" aria-hidden=\"true\">#</a> <strong>7.</strong> Enter an artifact id (e.g. <code v-pre>myfirstbot</code>)</h4>\n<h4 id=\"_8-click-next\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-click-next\" aria-hidden=\"true\">#</a> <strong>8.</strong> Click <code v-pre>Next</code></h4>\n<p><img src=\"https://i.imgur.com/kWoutrk.png\" alt=\"\"></p>\n<h4 id=\"_9-click-on-finish\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_9-click-on-finish\" aria-hidden=\"true\">#</a> <strong>9.</strong> Click on <code v-pre>Finish</code></h4>\n<p><img src=\"https://i.imgur.com/pXwWMbi.png\" alt=\"\"></p>\n<h4 id=\"_10-your-project-should-now-look-like-this-first-click-on-enable-auto-import\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_10-your-project-should-now-look-like-this-first-click-on-enable-auto-import\" aria-hidden=\"true\">#</a> <strong>10.</strong> Your project should now look like this. First click on <code v-pre>Enable Auto-Import</code></h4>\n<p><img src=\"https://i.imgur.com/PXZ6aww.png\" alt=\"\"></p>\n<h4 id=\"_11-now-you-have-to-add-javacord-as-a-dependency-by-editing-the-pom-xml-file-your-file-should-now-look-like-this\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_11-now-you-have-to-add-javacord-as-a-dependency-by-editing-the-pom-xml-file-your-file-should-now-look-like-this\" aria-hidden=\"true\">#</a> <strong>11.</strong> Now you have to add Javacord as a dependency by editing the pom.xml file. Your file should now look like this:</h4>\n<div class=\"language-xml ext-xml line-numbers-mode\"><pre v-pre class=\"language-xml\"><code><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>modelVersion</span><span class=\"token punctuation\">></span></span>4.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>modelVersion</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>your.package.name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>myfirstbot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0-SNAPSHOT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javacord<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$latest-version<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h4 id=\"_12-create-a-new-package\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_12-create-a-new-package\" aria-hidden=\"true\">#</a> <strong>12.</strong> Create a new package</h4>\n<p><img src=\"https://i.imgur.com/EtgpIok.png\" alt=\"\">\n<img src=\"https://i.imgur.com/P4e3RwT.png\" alt=\"\"></p>\n<h4 id=\"_13-create-a-new-class-inside-this-package\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_13-create-a-new-class-inside-this-package\" aria-hidden=\"true\">#</a> <strong>13.</strong> Create a new class inside this package</h4>\n<p><img src=\"https://i.imgur.com/VVnLssf.png\" alt=\"\">\n<img src=\"https://i.imgur.com/nyl3Jit.png\" alt=\"\"></p>\n<h4 id=\"_14-you-can-now-start-coding-example-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_14-you-can-now-start-coding-example-code\" aria-hidden=\"true\">#</a> <strong>14.</strong> You can now start coding! Example code:</h4>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>yourname</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DiscordApi</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>javacord<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DiscordApiBuilder</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Insert your bot's token here</span>\n        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token string\">\"your token\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">DiscordApi</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscordApiBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Add a listener which answers with \"Pong!\" if someone writes \"!ping\"</span>\n        api<span class=\"token punctuation\">.</span><span class=\"token function\">addMessageCreateListener</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"!ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                event<span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pong!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Print the invite url of your bot</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You can invite the bot by using the following url: \"</span> <span class=\"token operator\">+</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">createBotInvite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"run-the-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#run-the-code\" aria-hidden=\"true\">#</a> üèÉ‚Äç‚ôÄÔ∏è Run the code</h2>\n<p>You can run your code by clicking on the small green arrow\n<img src=\"https://i.imgur.com/USGlewm.png\" alt=\"\"></p>\n<h2 id=\"possible-problems\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#possible-problems\" aria-hidden=\"true\">#</a> üöß Possible problems</h2>\n<p><strong>Note:</strong> If you get the following error:\n<img src=\"https://i.imgur.com/Q34zZpb.png\" alt=\"\"></p>\n<p>you have to change your language level to <code v-pre>1.8</code></p>\n<p><img src=\"https://i.imgur.com/IwQ5LN8.png\" alt=\"\"></p>\n","path":"/wiki/getting-started/setup/intellij-maven.html","keywords":[]}]